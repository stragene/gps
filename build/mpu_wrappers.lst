ARM GAS  C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"mpu_wrappers.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.MPU_xTaskCreateRestricted,"ax",%progbits
  22              		.align	2
  23              		.global	MPU_xTaskCreateRestricted
  24              		.thumb
  25              		.thumb_func
  27              	MPU_xTaskCreateRestricted:
  28              	.LFB116:
  29              		.file 1 "./freertos/Source/portable/Common/mpu_wrappers.c"
   1:./freertos/Source/portable/Common/mpu_wrappers.c **** /*
   2:./freertos/Source/portable/Common/mpu_wrappers.c ****     FreeRTOS V9.0.0 - Copyright (C) 2016 Real Time Engineers Ltd.
   3:./freertos/Source/portable/Common/mpu_wrappers.c ****     All rights reserved
   4:./freertos/Source/portable/Common/mpu_wrappers.c **** 
   5:./freertos/Source/portable/Common/mpu_wrappers.c ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
   6:./freertos/Source/portable/Common/mpu_wrappers.c **** 
   7:./freertos/Source/portable/Common/mpu_wrappers.c ****     This file is part of the FreeRTOS distribution.
   8:./freertos/Source/portable/Common/mpu_wrappers.c **** 
   9:./freertos/Source/portable/Common/mpu_wrappers.c ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  10:./freertos/Source/portable/Common/mpu_wrappers.c ****     the terms of the GNU General Public License (version 2) as published by the
  11:./freertos/Source/portable/Common/mpu_wrappers.c ****     Free Software Foundation >>>> AND MODIFIED BY <<<< the FreeRTOS exception.
  12:./freertos/Source/portable/Common/mpu_wrappers.c **** 
  13:./freertos/Source/portable/Common/mpu_wrappers.c ****     ***************************************************************************
  14:./freertos/Source/portable/Common/mpu_wrappers.c ****     >>!   NOTE: The modification to the GPL is included to allow you to     !<<
  15:./freertos/Source/portable/Common/mpu_wrappers.c ****     >>!   distribute a combined work that includes FreeRTOS without being   !<<
  16:./freertos/Source/portable/Common/mpu_wrappers.c ****     >>!   obliged to provide the source code for proprietary components     !<<
  17:./freertos/Source/portable/Common/mpu_wrappers.c ****     >>!   outside of the FreeRTOS kernel.                                   !<<
  18:./freertos/Source/portable/Common/mpu_wrappers.c ****     ***************************************************************************
  19:./freertos/Source/portable/Common/mpu_wrappers.c **** 
  20:./freertos/Source/portable/Common/mpu_wrappers.c ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
  21:./freertos/Source/portable/Common/mpu_wrappers.c ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  22:./freertos/Source/portable/Common/mpu_wrappers.c ****     FOR A PARTICULAR PURPOSE.  Full license text is available on the following
  23:./freertos/Source/portable/Common/mpu_wrappers.c ****     link: http://www.freertos.org/a00114.html
  24:./freertos/Source/portable/Common/mpu_wrappers.c **** 
  25:./freertos/Source/portable/Common/mpu_wrappers.c ****     ***************************************************************************
  26:./freertos/Source/portable/Common/mpu_wrappers.c ****      *                                                                       *
  27:./freertos/Source/portable/Common/mpu_wrappers.c ****      *    FreeRTOS provides completely free yet professionally developed,    *
  28:./freertos/Source/portable/Common/mpu_wrappers.c ****      *    robust, strictly quality controlled, supported, and cross          *
  29:./freertos/Source/portable/Common/mpu_wrappers.c ****      *    platform software that is more than just the market leader, it     *
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s 			page 2


  30:./freertos/Source/portable/Common/mpu_wrappers.c ****      *    is the industry's de facto standard.                               *
  31:./freertos/Source/portable/Common/mpu_wrappers.c ****      *                                                                       *
  32:./freertos/Source/portable/Common/mpu_wrappers.c ****      *    Help yourself get started quickly while simultaneously helping     *
  33:./freertos/Source/portable/Common/mpu_wrappers.c ****      *    to support the FreeRTOS project by purchasing a FreeRTOS           *
  34:./freertos/Source/portable/Common/mpu_wrappers.c ****      *    tutorial book, reference manual, or both:                          *
  35:./freertos/Source/portable/Common/mpu_wrappers.c ****      *    http://www.FreeRTOS.org/Documentation                              *
  36:./freertos/Source/portable/Common/mpu_wrappers.c ****      *                                                                       *
  37:./freertos/Source/portable/Common/mpu_wrappers.c ****     ***************************************************************************
  38:./freertos/Source/portable/Common/mpu_wrappers.c **** 
  39:./freertos/Source/portable/Common/mpu_wrappers.c ****     http://www.FreeRTOS.org/FAQHelp.html - Having a problem?  Start by reading
  40:./freertos/Source/portable/Common/mpu_wrappers.c ****     the FAQ page "My application does not run, what could be wrong?".  Have you
  41:./freertos/Source/portable/Common/mpu_wrappers.c ****     defined configASSERT()?
  42:./freertos/Source/portable/Common/mpu_wrappers.c **** 
  43:./freertos/Source/portable/Common/mpu_wrappers.c ****     http://www.FreeRTOS.org/support - In return for receiving this top quality
  44:./freertos/Source/portable/Common/mpu_wrappers.c ****     embedded software for free we request you assist our global community by
  45:./freertos/Source/portable/Common/mpu_wrappers.c ****     participating in the support forum.
  46:./freertos/Source/portable/Common/mpu_wrappers.c **** 
  47:./freertos/Source/portable/Common/mpu_wrappers.c ****     http://www.FreeRTOS.org/training - Investing in training allows your team to
  48:./freertos/Source/portable/Common/mpu_wrappers.c ****     be as productive as possible as early as possible.  Now you can receive
  49:./freertos/Source/portable/Common/mpu_wrappers.c ****     FreeRTOS training directly from Richard Barry, CEO of Real Time Engineers
  50:./freertos/Source/portable/Common/mpu_wrappers.c ****     Ltd, and the world's leading authority on the world's leading RTOS.
  51:./freertos/Source/portable/Common/mpu_wrappers.c **** 
  52:./freertos/Source/portable/Common/mpu_wrappers.c ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
  53:./freertos/Source/portable/Common/mpu_wrappers.c ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
  54:./freertos/Source/portable/Common/mpu_wrappers.c ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
  55:./freertos/Source/portable/Common/mpu_wrappers.c **** 
  56:./freertos/Source/portable/Common/mpu_wrappers.c ****     http://www.FreeRTOS.org/labs - Where new FreeRTOS products go to incubate.
  57:./freertos/Source/portable/Common/mpu_wrappers.c ****     Come and try FreeRTOS+TCP, our new open source TCP/IP stack for FreeRTOS.
  58:./freertos/Source/portable/Common/mpu_wrappers.c **** 
  59:./freertos/Source/portable/Common/mpu_wrappers.c ****     http://www.OpenRTOS.com - Real Time Engineers ltd. license FreeRTOS to High
  60:./freertos/Source/portable/Common/mpu_wrappers.c ****     Integrity Systems ltd. to sell under the OpenRTOS brand.  Low cost OpenRTOS
  61:./freertos/Source/portable/Common/mpu_wrappers.c ****     licenses offer ticketed support, indemnification and commercial middleware.
  62:./freertos/Source/portable/Common/mpu_wrappers.c **** 
  63:./freertos/Source/portable/Common/mpu_wrappers.c ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
  64:./freertos/Source/portable/Common/mpu_wrappers.c ****     engineered and independently SIL3 certified version for use in safety and
  65:./freertos/Source/portable/Common/mpu_wrappers.c ****     mission critical applications that require provable dependability.
  66:./freertos/Source/portable/Common/mpu_wrappers.c **** 
  67:./freertos/Source/portable/Common/mpu_wrappers.c ****     1 tab == 4 spaces!
  68:./freertos/Source/portable/Common/mpu_wrappers.c **** */
  69:./freertos/Source/portable/Common/mpu_wrappers.c **** 
  70:./freertos/Source/portable/Common/mpu_wrappers.c **** /*
  71:./freertos/Source/portable/Common/mpu_wrappers.c ****  * Implementation of the wrapper functions used to raise the processor privilege
  72:./freertos/Source/portable/Common/mpu_wrappers.c ****  * before calling a standard FreeRTOS API function.
  73:./freertos/Source/portable/Common/mpu_wrappers.c ****  */
  74:./freertos/Source/portable/Common/mpu_wrappers.c **** 
  75:./freertos/Source/portable/Common/mpu_wrappers.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  76:./freertos/Source/portable/Common/mpu_wrappers.c **** all the API functions to use the MPU wrappers.  That should only be done when
  77:./freertos/Source/portable/Common/mpu_wrappers.c **** task.h is included from an application file. */
  78:./freertos/Source/portable/Common/mpu_wrappers.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  79:./freertos/Source/portable/Common/mpu_wrappers.c **** 
  80:./freertos/Source/portable/Common/mpu_wrappers.c **** /* Scheduler includes. */
  81:./freertos/Source/portable/Common/mpu_wrappers.c **** #include "FreeRTOS.h"
  82:./freertos/Source/portable/Common/mpu_wrappers.c **** #include "task.h"
  83:./freertos/Source/portable/Common/mpu_wrappers.c **** #include "queue.h"
  84:./freertos/Source/portable/Common/mpu_wrappers.c **** #include "timers.h"
  85:./freertos/Source/portable/Common/mpu_wrappers.c **** #include "event_groups.h"
  86:./freertos/Source/portable/Common/mpu_wrappers.c **** #include "mpu_prototypes.h"
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s 			page 3


  87:./freertos/Source/portable/Common/mpu_wrappers.c **** 
  88:./freertos/Source/portable/Common/mpu_wrappers.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  89:./freertos/Source/portable/Common/mpu_wrappers.c **** 
  90:./freertos/Source/portable/Common/mpu_wrappers.c **** /*
  91:./freertos/Source/portable/Common/mpu_wrappers.c ****  * Checks to see if being called from the context of an unprivileged task, and
  92:./freertos/Source/portable/Common/mpu_wrappers.c ****  * if so raises the privilege level and returns false - otherwise does nothing
  93:./freertos/Source/portable/Common/mpu_wrappers.c ****  * other than return true.
  94:./freertos/Source/portable/Common/mpu_wrappers.c ****  */
  95:./freertos/Source/portable/Common/mpu_wrappers.c **** extern BaseType_t xPortRaisePrivilege( void );
  96:./freertos/Source/portable/Common/mpu_wrappers.c **** 
  97:./freertos/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
  98:./freertos/Source/portable/Common/mpu_wrappers.c **** 
  99:./freertos/Source/portable/Common/mpu_wrappers.c **** BaseType_t MPU_xTaskCreateRestricted( const TaskParameters_t * const pxTaskDefinition, TaskHandle_t
 100:./freertos/Source/portable/Common/mpu_wrappers.c **** {
  30              		.loc 1 100 0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              	.LVL0:
  35 0000 70B5     		push	{r4, r5, r6, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 16
  38              		.cfi_offset 4, -16
  39              		.cfi_offset 5, -12
  40              		.cfi_offset 6, -8
  41              		.cfi_offset 14, -4
  42 0002 0446     		mov	r4, r0
  43 0004 0E46     		mov	r6, r1
 101:./freertos/Source/portable/Common/mpu_wrappers.c **** BaseType_t xReturn;
 102:./freertos/Source/portable/Common/mpu_wrappers.c **** BaseType_t xRunningPrivileged = xPortRaisePrivilege();
  44              		.loc 1 102 0
  45 0006 FFF7FEFF 		bl	xPortRaisePrivilege
  46              	.LVL1:
  47 000a 0546     		mov	r5, r0
  48              	.LVL2:
 103:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 104:./freertos/Source/portable/Common/mpu_wrappers.c **** 	xReturn = xTaskCreateRestricted( pxTaskDefinition, pxCreatedTask );
  49              		.loc 1 104 0
  50 000c 3146     		mov	r1, r6
  51 000e 2046     		mov	r0, r4
  52              	.LVL3:
  53 0010 FFF7FEFF 		bl	xTaskCreateRestricted
  54              	.LVL4:
  55 0014 0446     		mov	r4, r0
  56              	.LVL5:
 105:./freertos/Source/portable/Common/mpu_wrappers.c **** 	vPortResetPrivilege( xRunningPrivileged );
  57              		.loc 1 105 0
  58 0016 2846     		mov	r0, r5
  59              	.LVL6:
  60 0018 FFF7FEFF 		bl	vPortResetPrivilege
  61              	.LVL7:
 106:./freertos/Source/portable/Common/mpu_wrappers.c **** 	return xReturn;
 107:./freertos/Source/portable/Common/mpu_wrappers.c **** }
  62              		.loc 1 107 0
  63 001c 2046     		mov	r0, r4
  64 001e 70BD     		pop	{r4, r5, r6, pc}
  65              		.cfi_endproc
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s 			page 4


  66              	.LFE116:
  68              		.section	.text.MPU_xTaskCreate,"ax",%progbits
  69              		.align	2
  70              		.global	MPU_xTaskCreate
  71              		.thumb
  72              		.thumb_func
  74              	MPU_xTaskCreate:
  75              	.LFB117:
 108:./freertos/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 109:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 110:./freertos/Source/portable/Common/mpu_wrappers.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 111:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t MPU_xTaskCreate( TaskFunction_t pvTaskCode, const char * const pcName, uint16_t usStack
 112:./freertos/Source/portable/Common/mpu_wrappers.c **** 	{
  76              		.loc 1 112 0
  77              		.cfi_startproc
  78              		@ args = 8, pretend = 0, frame = 0
  79              		@ frame_needed = 0, uses_anonymous_args = 0
  80              	.LVL8:
  81 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  82              	.LCFI1:
  83              		.cfi_def_cfa_offset 24
  84              		.cfi_offset 4, -24
  85              		.cfi_offset 5, -20
  86              		.cfi_offset 6, -16
  87              		.cfi_offset 7, -12
  88              		.cfi_offset 8, -8
  89              		.cfi_offset 14, -4
  90 0004 82B0     		sub	sp, sp, #8
  91              	.LCFI2:
  92              		.cfi_def_cfa_offset 32
  93 0006 0446     		mov	r4, r0
  94 0008 0E46     		mov	r6, r1
  95 000a 1746     		mov	r7, r2
  96 000c 9846     		mov	r8, r3
 113:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t xReturn;
 114:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
  97              		.loc 1 114 0
  98 000e FFF7FEFF 		bl	xPortRaisePrivilege
  99              	.LVL9:
 100 0012 0546     		mov	r5, r0
 101              	.LVL10:
 115:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 116:./freertos/Source/portable/Common/mpu_wrappers.c **** 		xReturn = xTaskCreate( pvTaskCode, pcName, usStackDepth, pvParameters, uxPriority, pxCreatedTask 
 102              		.loc 1 116 0
 103 0014 099B     		ldr	r3, [sp, #36]
 104 0016 0193     		str	r3, [sp, #4]
 105 0018 089B     		ldr	r3, [sp, #32]
 106 001a 0093     		str	r3, [sp]
 107 001c 4346     		mov	r3, r8
 108 001e 3A46     		mov	r2, r7
 109 0020 3146     		mov	r1, r6
 110 0022 2046     		mov	r0, r4
 111              	.LVL11:
 112 0024 FFF7FEFF 		bl	xTaskCreate
 113              	.LVL12:
 114 0028 0446     		mov	r4, r0
 115              	.LVL13:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s 			page 5


 117:./freertos/Source/portable/Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 116              		.loc 1 117 0
 117 002a 2846     		mov	r0, r5
 118              	.LVL14:
 119 002c FFF7FEFF 		bl	vPortResetPrivilege
 120              	.LVL15:
 118:./freertos/Source/portable/Common/mpu_wrappers.c **** 		return xReturn;
 119:./freertos/Source/portable/Common/mpu_wrappers.c **** 	}
 121              		.loc 1 119 0
 122 0030 2046     		mov	r0, r4
 123 0032 02B0     		add	sp, sp, #8
 124              	.LCFI3:
 125              		.cfi_def_cfa_offset 24
 126              		@ sp needed
 127 0034 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 128              		.cfi_endproc
 129              	.LFE117:
 131              		.section	.text.MPU_vTaskAllocateMPURegions,"ax",%progbits
 132              		.align	2
 133              		.global	MPU_vTaskAllocateMPURegions
 134              		.thumb
 135              		.thumb_func
 137              	MPU_vTaskAllocateMPURegions:
 138              	.LFB118:
 120:./freertos/Source/portable/Common/mpu_wrappers.c **** #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 121:./freertos/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 122:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 123:./freertos/Source/portable/Common/mpu_wrappers.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 124:./freertos/Source/portable/Common/mpu_wrappers.c **** 	TaskHandle_t MPU_xTaskCreateStatic( TaskFunction_t pxTaskCode, const char * const pcName, const ui
 125:./freertos/Source/portable/Common/mpu_wrappers.c **** 	{
 126:./freertos/Source/portable/Common/mpu_wrappers.c **** 	TaskHandle_t xReturn;
 127:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 128:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 129:./freertos/Source/portable/Common/mpu_wrappers.c **** 		xReturn = xTaskCreateStatic( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, puxStack
 130:./freertos/Source/portable/Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 131:./freertos/Source/portable/Common/mpu_wrappers.c **** 		return xReturn;
 132:./freertos/Source/portable/Common/mpu_wrappers.c **** 	}
 133:./freertos/Source/portable/Common/mpu_wrappers.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 134:./freertos/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 135:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 136:./freertos/Source/portable/Common/mpu_wrappers.c **** void MPU_vTaskAllocateMPURegions( TaskHandle_t xTask, const MemoryRegion_t * const xRegions )
 137:./freertos/Source/portable/Common/mpu_wrappers.c **** {
 139              		.loc 1 137 0
 140              		.cfi_startproc
 141              		@ args = 0, pretend = 0, frame = 0
 142              		@ frame_needed = 0, uses_anonymous_args = 0
 143              	.LVL16:
 144 0000 70B5     		push	{r4, r5, r6, lr}
 145              	.LCFI4:
 146              		.cfi_def_cfa_offset 16
 147              		.cfi_offset 4, -16
 148              		.cfi_offset 5, -12
 149              		.cfi_offset 6, -8
 150              		.cfi_offset 14, -4
 151 0002 0546     		mov	r5, r0
 152 0004 0E46     		mov	r6, r1
 138:./freertos/Source/portable/Common/mpu_wrappers.c **** BaseType_t xRunningPrivileged = xPortRaisePrivilege();
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s 			page 6


 153              		.loc 1 138 0
 154 0006 FFF7FEFF 		bl	xPortRaisePrivilege
 155              	.LVL17:
 156 000a 0446     		mov	r4, r0
 157              	.LVL18:
 139:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 140:./freertos/Source/portable/Common/mpu_wrappers.c **** 	vTaskAllocateMPURegions( xTask, xRegions );
 158              		.loc 1 140 0
 159 000c 3146     		mov	r1, r6
 160 000e 2846     		mov	r0, r5
 161              	.LVL19:
 162 0010 FFF7FEFF 		bl	vTaskAllocateMPURegions
 163              	.LVL20:
 141:./freertos/Source/portable/Common/mpu_wrappers.c **** 	vPortResetPrivilege( xRunningPrivileged );
 164              		.loc 1 141 0
 165 0014 2046     		mov	r0, r4
 166 0016 FFF7FEFF 		bl	vPortResetPrivilege
 167              	.LVL21:
 168 001a 70BD     		pop	{r4, r5, r6, pc}
 169              		.cfi_endproc
 170              	.LFE118:
 172              		.section	.text.MPU_vTaskDelete,"ax",%progbits
 173              		.align	2
 174              		.global	MPU_vTaskDelete
 175              		.thumb
 176              		.thumb_func
 178              	MPU_vTaskDelete:
 179              	.LFB119:
 142:./freertos/Source/portable/Common/mpu_wrappers.c **** }
 143:./freertos/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 144:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 145:./freertos/Source/portable/Common/mpu_wrappers.c **** #if ( INCLUDE_vTaskDelete == 1 )
 146:./freertos/Source/portable/Common/mpu_wrappers.c **** 	void MPU_vTaskDelete( TaskHandle_t pxTaskToDelete )
 147:./freertos/Source/portable/Common/mpu_wrappers.c **** 	{
 180              		.loc 1 147 0
 181              		.cfi_startproc
 182              		@ args = 0, pretend = 0, frame = 0
 183              		@ frame_needed = 0, uses_anonymous_args = 0
 184              	.LVL22:
 185 0000 38B5     		push	{r3, r4, r5, lr}
 186              	.LCFI5:
 187              		.cfi_def_cfa_offset 16
 188              		.cfi_offset 3, -16
 189              		.cfi_offset 4, -12
 190              		.cfi_offset 5, -8
 191              		.cfi_offset 14, -4
 192 0002 0546     		mov	r5, r0
 148:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 193              		.loc 1 148 0
 194 0004 FFF7FEFF 		bl	xPortRaisePrivilege
 195              	.LVL23:
 196 0008 0446     		mov	r4, r0
 197              	.LVL24:
 149:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 150:./freertos/Source/portable/Common/mpu_wrappers.c **** 		vTaskDelete( pxTaskToDelete );
 198              		.loc 1 150 0
 199 000a 2846     		mov	r0, r5
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s 			page 7


 200              	.LVL25:
 201 000c FFF7FEFF 		bl	vTaskDelete
 202              	.LVL26:
 151:./freertos/Source/portable/Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 203              		.loc 1 151 0
 204 0010 2046     		mov	r0, r4
 205 0012 FFF7FEFF 		bl	vPortResetPrivilege
 206              	.LVL27:
 207 0016 38BD     		pop	{r3, r4, r5, pc}
 208              		.cfi_endproc
 209              	.LFE119:
 211              		.section	.text.MPU_vTaskDelayUntil,"ax",%progbits
 212              		.align	2
 213              		.global	MPU_vTaskDelayUntil
 214              		.thumb
 215              		.thumb_func
 217              	MPU_vTaskDelayUntil:
 218              	.LFB120:
 152:./freertos/Source/portable/Common/mpu_wrappers.c **** 	}
 153:./freertos/Source/portable/Common/mpu_wrappers.c **** #endif
 154:./freertos/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 155:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 156:./freertos/Source/portable/Common/mpu_wrappers.c **** #if ( INCLUDE_vTaskDelayUntil == 1 )
 157:./freertos/Source/portable/Common/mpu_wrappers.c **** 	void MPU_vTaskDelayUntil( TickType_t * const pxPreviousWakeTime, TickType_t xTimeIncrement )
 158:./freertos/Source/portable/Common/mpu_wrappers.c **** 	{
 219              		.loc 1 158 0
 220              		.cfi_startproc
 221              		@ args = 0, pretend = 0, frame = 0
 222              		@ frame_needed = 0, uses_anonymous_args = 0
 223              	.LVL28:
 224 0000 70B5     		push	{r4, r5, r6, lr}
 225              	.LCFI6:
 226              		.cfi_def_cfa_offset 16
 227              		.cfi_offset 4, -16
 228              		.cfi_offset 5, -12
 229              		.cfi_offset 6, -8
 230              		.cfi_offset 14, -4
 231 0002 0546     		mov	r5, r0
 232 0004 0E46     		mov	r6, r1
 159:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 233              		.loc 1 159 0
 234 0006 FFF7FEFF 		bl	xPortRaisePrivilege
 235              	.LVL29:
 236 000a 0446     		mov	r4, r0
 237              	.LVL30:
 160:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 161:./freertos/Source/portable/Common/mpu_wrappers.c **** 		vTaskDelayUntil( pxPreviousWakeTime, xTimeIncrement );
 238              		.loc 1 161 0
 239 000c 3146     		mov	r1, r6
 240 000e 2846     		mov	r0, r5
 241              	.LVL31:
 242 0010 FFF7FEFF 		bl	vTaskDelayUntil
 243              	.LVL32:
 162:./freertos/Source/portable/Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 244              		.loc 1 162 0
 245 0014 2046     		mov	r0, r4
 246 0016 FFF7FEFF 		bl	vPortResetPrivilege
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s 			page 8


 247              	.LVL33:
 248 001a 70BD     		pop	{r4, r5, r6, pc}
 249              		.cfi_endproc
 250              	.LFE120:
 252              		.section	.text.MPU_vTaskDelay,"ax",%progbits
 253              		.align	2
 254              		.global	MPU_vTaskDelay
 255              		.thumb
 256              		.thumb_func
 258              	MPU_vTaskDelay:
 259              	.LFB121:
 163:./freertos/Source/portable/Common/mpu_wrappers.c **** 	}
 164:./freertos/Source/portable/Common/mpu_wrappers.c **** #endif
 165:./freertos/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 166:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 167:./freertos/Source/portable/Common/mpu_wrappers.c **** #if ( INCLUDE_xTaskAbortDelay == 1 )
 168:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t MPU_xTaskAbortDelay( TaskHandle_t xTask )
 169:./freertos/Source/portable/Common/mpu_wrappers.c **** 	{
 170:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t xReturn;
 171:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 172:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 173:./freertos/Source/portable/Common/mpu_wrappers.c **** 		xReturn = xTaskAbortDelay( xTask );
 174:./freertos/Source/portable/Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 175:./freertos/Source/portable/Common/mpu_wrappers.c **** 		return xReturn;
 176:./freertos/Source/portable/Common/mpu_wrappers.c **** 	}
 177:./freertos/Source/portable/Common/mpu_wrappers.c **** #endif
 178:./freertos/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 179:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 180:./freertos/Source/portable/Common/mpu_wrappers.c **** #if ( INCLUDE_vTaskDelay == 1 )
 181:./freertos/Source/portable/Common/mpu_wrappers.c **** 	void MPU_vTaskDelay( TickType_t xTicksToDelay )
 182:./freertos/Source/portable/Common/mpu_wrappers.c **** 	{
 260              		.loc 1 182 0
 261              		.cfi_startproc
 262              		@ args = 0, pretend = 0, frame = 0
 263              		@ frame_needed = 0, uses_anonymous_args = 0
 264              	.LVL34:
 265 0000 38B5     		push	{r3, r4, r5, lr}
 266              	.LCFI7:
 267              		.cfi_def_cfa_offset 16
 268              		.cfi_offset 3, -16
 269              		.cfi_offset 4, -12
 270              		.cfi_offset 5, -8
 271              		.cfi_offset 14, -4
 272 0002 0546     		mov	r5, r0
 183:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 273              		.loc 1 183 0
 274 0004 FFF7FEFF 		bl	xPortRaisePrivilege
 275              	.LVL35:
 276 0008 0446     		mov	r4, r0
 277              	.LVL36:
 184:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 185:./freertos/Source/portable/Common/mpu_wrappers.c **** 		vTaskDelay( xTicksToDelay );
 278              		.loc 1 185 0
 279 000a 2846     		mov	r0, r5
 280              	.LVL37:
 281 000c FFF7FEFF 		bl	vTaskDelay
 282              	.LVL38:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s 			page 9


 186:./freertos/Source/portable/Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 283              		.loc 1 186 0
 284 0010 2046     		mov	r0, r4
 285 0012 FFF7FEFF 		bl	vPortResetPrivilege
 286              	.LVL39:
 287 0016 38BD     		pop	{r3, r4, r5, pc}
 288              		.cfi_endproc
 289              	.LFE121:
 291              		.section	.text.MPU_uxTaskPriorityGet,"ax",%progbits
 292              		.align	2
 293              		.global	MPU_uxTaskPriorityGet
 294              		.thumb
 295              		.thumb_func
 297              	MPU_uxTaskPriorityGet:
 298              	.LFB122:
 187:./freertos/Source/portable/Common/mpu_wrappers.c **** 	}
 188:./freertos/Source/portable/Common/mpu_wrappers.c **** #endif
 189:./freertos/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 190:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 191:./freertos/Source/portable/Common/mpu_wrappers.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
 192:./freertos/Source/portable/Common/mpu_wrappers.c **** 	UBaseType_t MPU_uxTaskPriorityGet( TaskHandle_t pxTask )
 193:./freertos/Source/portable/Common/mpu_wrappers.c **** 	{
 299              		.loc 1 193 0
 300              		.cfi_startproc
 301              		@ args = 0, pretend = 0, frame = 0
 302              		@ frame_needed = 0, uses_anonymous_args = 0
 303              	.LVL40:
 304 0000 38B5     		push	{r3, r4, r5, lr}
 305              	.LCFI8:
 306              		.cfi_def_cfa_offset 16
 307              		.cfi_offset 3, -16
 308              		.cfi_offset 4, -12
 309              		.cfi_offset 5, -8
 310              		.cfi_offset 14, -4
 311 0002 0446     		mov	r4, r0
 194:./freertos/Source/portable/Common/mpu_wrappers.c **** 	UBaseType_t uxReturn;
 195:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 312              		.loc 1 195 0
 313 0004 FFF7FEFF 		bl	xPortRaisePrivilege
 314              	.LVL41:
 315 0008 0546     		mov	r5, r0
 316              	.LVL42:
 196:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 197:./freertos/Source/portable/Common/mpu_wrappers.c **** 		uxReturn = uxTaskPriorityGet( pxTask );
 317              		.loc 1 197 0
 318 000a 2046     		mov	r0, r4
 319              	.LVL43:
 320 000c FFF7FEFF 		bl	uxTaskPriorityGet
 321              	.LVL44:
 322 0010 0446     		mov	r4, r0
 323              	.LVL45:
 198:./freertos/Source/portable/Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 324              		.loc 1 198 0
 325 0012 2846     		mov	r0, r5
 326              	.LVL46:
 327 0014 FFF7FEFF 		bl	vPortResetPrivilege
 328              	.LVL47:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s 			page 10


 199:./freertos/Source/portable/Common/mpu_wrappers.c **** 		return uxReturn;
 200:./freertos/Source/portable/Common/mpu_wrappers.c **** 	}
 329              		.loc 1 200 0
 330 0018 2046     		mov	r0, r4
 331 001a 38BD     		pop	{r3, r4, r5, pc}
 332              		.cfi_endproc
 333              	.LFE122:
 335              		.section	.text.MPU_vTaskPrioritySet,"ax",%progbits
 336              		.align	2
 337              		.global	MPU_vTaskPrioritySet
 338              		.thumb
 339              		.thumb_func
 341              	MPU_vTaskPrioritySet:
 342              	.LFB123:
 201:./freertos/Source/portable/Common/mpu_wrappers.c **** #endif
 202:./freertos/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 203:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 204:./freertos/Source/portable/Common/mpu_wrappers.c **** #if ( INCLUDE_vTaskPrioritySet == 1 )
 205:./freertos/Source/portable/Common/mpu_wrappers.c **** 	void MPU_vTaskPrioritySet( TaskHandle_t pxTask, UBaseType_t uxNewPriority )
 206:./freertos/Source/portable/Common/mpu_wrappers.c **** 	{
 343              		.loc 1 206 0
 344              		.cfi_startproc
 345              		@ args = 0, pretend = 0, frame = 0
 346              		@ frame_needed = 0, uses_anonymous_args = 0
 347              	.LVL48:
 348 0000 70B5     		push	{r4, r5, r6, lr}
 349              	.LCFI9:
 350              		.cfi_def_cfa_offset 16
 351              		.cfi_offset 4, -16
 352              		.cfi_offset 5, -12
 353              		.cfi_offset 6, -8
 354              		.cfi_offset 14, -4
 355 0002 0546     		mov	r5, r0
 356 0004 0E46     		mov	r6, r1
 207:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 357              		.loc 1 207 0
 358 0006 FFF7FEFF 		bl	xPortRaisePrivilege
 359              	.LVL49:
 360 000a 0446     		mov	r4, r0
 361              	.LVL50:
 208:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 209:./freertos/Source/portable/Common/mpu_wrappers.c **** 		vTaskPrioritySet( pxTask, uxNewPriority );
 362              		.loc 1 209 0
 363 000c 3146     		mov	r1, r6
 364 000e 2846     		mov	r0, r5
 365              	.LVL51:
 366 0010 FFF7FEFF 		bl	vTaskPrioritySet
 367              	.LVL52:
 210:./freertos/Source/portable/Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 368              		.loc 1 210 0
 369 0014 2046     		mov	r0, r4
 370 0016 FFF7FEFF 		bl	vPortResetPrivilege
 371              	.LVL53:
 372 001a 70BD     		pop	{r4, r5, r6, pc}
 373              		.cfi_endproc
 374              	.LFE123:
 376              		.section	.text.MPU_vTaskSuspend,"ax",%progbits
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s 			page 11


 377              		.align	2
 378              		.global	MPU_vTaskSuspend
 379              		.thumb
 380              		.thumb_func
 382              	MPU_vTaskSuspend:
 383              	.LFB124:
 211:./freertos/Source/portable/Common/mpu_wrappers.c **** 	}
 212:./freertos/Source/portable/Common/mpu_wrappers.c **** #endif
 213:./freertos/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 214:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 215:./freertos/Source/portable/Common/mpu_wrappers.c **** #if ( INCLUDE_eTaskGetState == 1 )
 216:./freertos/Source/portable/Common/mpu_wrappers.c **** 	eTaskState MPU_eTaskGetState( TaskHandle_t pxTask )
 217:./freertos/Source/portable/Common/mpu_wrappers.c **** 	{
 218:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 219:./freertos/Source/portable/Common/mpu_wrappers.c **** 	eTaskState eReturn;
 220:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 221:./freertos/Source/portable/Common/mpu_wrappers.c **** 		eReturn = eTaskGetState( pxTask );
 222:./freertos/Source/portable/Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 223:./freertos/Source/portable/Common/mpu_wrappers.c **** 		return eReturn;
 224:./freertos/Source/portable/Common/mpu_wrappers.c **** 	}
 225:./freertos/Source/portable/Common/mpu_wrappers.c **** #endif
 226:./freertos/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 227:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 228:./freertos/Source/portable/Common/mpu_wrappers.c **** #if( configUSE_TRACE_FACILITY == 1 )
 229:./freertos/Source/portable/Common/mpu_wrappers.c **** 	void MPU_vTaskGetInfo( TaskHandle_t xTask, TaskStatus_t *pxTaskStatus, BaseType_t xGetFreeStackSpa
 230:./freertos/Source/portable/Common/mpu_wrappers.c **** 	{
 231:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 232:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 233:./freertos/Source/portable/Common/mpu_wrappers.c **** 		vTaskGetInfo( xTask, pxTaskStatus, xGetFreeStackSpace, eState );
 234:./freertos/Source/portable/Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 235:./freertos/Source/portable/Common/mpu_wrappers.c **** 	}
 236:./freertos/Source/portable/Common/mpu_wrappers.c **** #endif
 237:./freertos/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 238:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 239:./freertos/Source/portable/Common/mpu_wrappers.c **** #if ( INCLUDE_xTaskGetIdleTaskHandle == 1 )
 240:./freertos/Source/portable/Common/mpu_wrappers.c **** 	TaskHandle_t MPU_xTaskGetIdleTaskHandle( void )
 241:./freertos/Source/portable/Common/mpu_wrappers.c **** 	{
 242:./freertos/Source/portable/Common/mpu_wrappers.c **** 	TaskHandle_t xReturn;
 243:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 244:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 245:./freertos/Source/portable/Common/mpu_wrappers.c **** 		xReturn = xTaskGetIdleTaskHandle();
 246:./freertos/Source/portable/Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 247:./freertos/Source/portable/Common/mpu_wrappers.c **** 		return xReturn;
 248:./freertos/Source/portable/Common/mpu_wrappers.c **** 	}
 249:./freertos/Source/portable/Common/mpu_wrappers.c **** #endif
 250:./freertos/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 251:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 252:./freertos/Source/portable/Common/mpu_wrappers.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 253:./freertos/Source/portable/Common/mpu_wrappers.c **** 	void MPU_vTaskSuspend( TaskHandle_t pxTaskToSuspend )
 254:./freertos/Source/portable/Common/mpu_wrappers.c **** 	{
 384              		.loc 1 254 0
 385              		.cfi_startproc
 386              		@ args = 0, pretend = 0, frame = 0
 387              		@ frame_needed = 0, uses_anonymous_args = 0
 388              	.LVL54:
 389 0000 38B5     		push	{r3, r4, r5, lr}
 390              	.LCFI10:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s 			page 12


 391              		.cfi_def_cfa_offset 16
 392              		.cfi_offset 3, -16
 393              		.cfi_offset 4, -12
 394              		.cfi_offset 5, -8
 395              		.cfi_offset 14, -4
 396 0002 0546     		mov	r5, r0
 255:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 397              		.loc 1 255 0
 398 0004 FFF7FEFF 		bl	xPortRaisePrivilege
 399              	.LVL55:
 400 0008 0446     		mov	r4, r0
 401              	.LVL56:
 256:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 257:./freertos/Source/portable/Common/mpu_wrappers.c **** 		vTaskSuspend( pxTaskToSuspend );
 402              		.loc 1 257 0
 403 000a 2846     		mov	r0, r5
 404              	.LVL57:
 405 000c FFF7FEFF 		bl	vTaskSuspend
 406              	.LVL58:
 258:./freertos/Source/portable/Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 407              		.loc 1 258 0
 408 0010 2046     		mov	r0, r4
 409 0012 FFF7FEFF 		bl	vPortResetPrivilege
 410              	.LVL59:
 411 0016 38BD     		pop	{r3, r4, r5, pc}
 412              		.cfi_endproc
 413              	.LFE124:
 415              		.section	.text.MPU_vTaskResume,"ax",%progbits
 416              		.align	2
 417              		.global	MPU_vTaskResume
 418              		.thumb
 419              		.thumb_func
 421              	MPU_vTaskResume:
 422              	.LFB125:
 259:./freertos/Source/portable/Common/mpu_wrappers.c **** 	}
 260:./freertos/Source/portable/Common/mpu_wrappers.c **** #endif
 261:./freertos/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 262:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 263:./freertos/Source/portable/Common/mpu_wrappers.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 264:./freertos/Source/portable/Common/mpu_wrappers.c **** 	void MPU_vTaskResume( TaskHandle_t pxTaskToResume )
 265:./freertos/Source/portable/Common/mpu_wrappers.c **** 	{
 423              		.loc 1 265 0
 424              		.cfi_startproc
 425              		@ args = 0, pretend = 0, frame = 0
 426              		@ frame_needed = 0, uses_anonymous_args = 0
 427              	.LVL60:
 428 0000 38B5     		push	{r3, r4, r5, lr}
 429              	.LCFI11:
 430              		.cfi_def_cfa_offset 16
 431              		.cfi_offset 3, -16
 432              		.cfi_offset 4, -12
 433              		.cfi_offset 5, -8
 434              		.cfi_offset 14, -4
 435 0002 0546     		mov	r5, r0
 266:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 436              		.loc 1 266 0
 437 0004 FFF7FEFF 		bl	xPortRaisePrivilege
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s 			page 13


 438              	.LVL61:
 439 0008 0446     		mov	r4, r0
 440              	.LVL62:
 267:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 268:./freertos/Source/portable/Common/mpu_wrappers.c **** 		vTaskResume( pxTaskToResume );
 441              		.loc 1 268 0
 442 000a 2846     		mov	r0, r5
 443              	.LVL63:
 444 000c FFF7FEFF 		bl	vTaskResume
 445              	.LVL64:
 269:./freertos/Source/portable/Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 446              		.loc 1 269 0
 447 0010 2046     		mov	r0, r4
 448 0012 FFF7FEFF 		bl	vPortResetPrivilege
 449              	.LVL65:
 450 0016 38BD     		pop	{r3, r4, r5, pc}
 451              		.cfi_endproc
 452              	.LFE125:
 454              		.section	.text.MPU_vTaskSuspendAll,"ax",%progbits
 455              		.align	2
 456              		.global	MPU_vTaskSuspendAll
 457              		.thumb
 458              		.thumb_func
 460              	MPU_vTaskSuspendAll:
 461              	.LFB126:
 270:./freertos/Source/portable/Common/mpu_wrappers.c **** 	}
 271:./freertos/Source/portable/Common/mpu_wrappers.c **** #endif
 272:./freertos/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 273:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 274:./freertos/Source/portable/Common/mpu_wrappers.c **** void MPU_vTaskSuspendAll( void )
 275:./freertos/Source/portable/Common/mpu_wrappers.c **** {
 462              		.loc 1 275 0
 463              		.cfi_startproc
 464              		@ args = 0, pretend = 0, frame = 0
 465              		@ frame_needed = 0, uses_anonymous_args = 0
 466 0000 10B5     		push	{r4, lr}
 467              	.LCFI12:
 468              		.cfi_def_cfa_offset 8
 469              		.cfi_offset 4, -8
 470              		.cfi_offset 14, -4
 276:./freertos/Source/portable/Common/mpu_wrappers.c **** BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 471              		.loc 1 276 0
 472 0002 FFF7FEFF 		bl	xPortRaisePrivilege
 473              	.LVL66:
 474 0006 0446     		mov	r4, r0
 475              	.LVL67:
 277:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 278:./freertos/Source/portable/Common/mpu_wrappers.c **** 	vTaskSuspendAll();
 476              		.loc 1 278 0
 477 0008 FFF7FEFF 		bl	vTaskSuspendAll
 478              	.LVL68:
 279:./freertos/Source/portable/Common/mpu_wrappers.c **** 	vPortResetPrivilege( xRunningPrivileged );
 479              		.loc 1 279 0
 480 000c 2046     		mov	r0, r4
 481 000e FFF7FEFF 		bl	vPortResetPrivilege
 482              	.LVL69:
 483 0012 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s 			page 14


 484              		.cfi_endproc
 485              	.LFE126:
 487              		.section	.text.MPU_xTaskResumeAll,"ax",%progbits
 488              		.align	2
 489              		.global	MPU_xTaskResumeAll
 490              		.thumb
 491              		.thumb_func
 493              	MPU_xTaskResumeAll:
 494              	.LFB127:
 280:./freertos/Source/portable/Common/mpu_wrappers.c **** }
 281:./freertos/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 282:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 283:./freertos/Source/portable/Common/mpu_wrappers.c **** BaseType_t MPU_xTaskResumeAll( void )
 284:./freertos/Source/portable/Common/mpu_wrappers.c **** {
 495              		.loc 1 284 0
 496              		.cfi_startproc
 497              		@ args = 0, pretend = 0, frame = 0
 498              		@ frame_needed = 0, uses_anonymous_args = 0
 499 0000 38B5     		push	{r3, r4, r5, lr}
 500              	.LCFI13:
 501              		.cfi_def_cfa_offset 16
 502              		.cfi_offset 3, -16
 503              		.cfi_offset 4, -12
 504              		.cfi_offset 5, -8
 505              		.cfi_offset 14, -4
 285:./freertos/Source/portable/Common/mpu_wrappers.c **** BaseType_t xReturn;
 286:./freertos/Source/portable/Common/mpu_wrappers.c **** BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 506              		.loc 1 286 0
 507 0002 FFF7FEFF 		bl	xPortRaisePrivilege
 508              	.LVL70:
 509 0006 0546     		mov	r5, r0
 510              	.LVL71:
 287:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 288:./freertos/Source/portable/Common/mpu_wrappers.c **** 	xReturn = xTaskResumeAll();
 511              		.loc 1 288 0
 512 0008 FFF7FEFF 		bl	xTaskResumeAll
 513              	.LVL72:
 514 000c 0446     		mov	r4, r0
 515              	.LVL73:
 289:./freertos/Source/portable/Common/mpu_wrappers.c **** 	vPortResetPrivilege( xRunningPrivileged );
 516              		.loc 1 289 0
 517 000e 2846     		mov	r0, r5
 518              	.LVL74:
 519 0010 FFF7FEFF 		bl	vPortResetPrivilege
 520              	.LVL75:
 290:./freertos/Source/portable/Common/mpu_wrappers.c **** 	return xReturn;
 291:./freertos/Source/portable/Common/mpu_wrappers.c **** }
 521              		.loc 1 291 0
 522 0014 2046     		mov	r0, r4
 523 0016 38BD     		pop	{r3, r4, r5, pc}
 524              		.cfi_endproc
 525              	.LFE127:
 527              		.section	.text.MPU_xTaskGetTickCount,"ax",%progbits
 528              		.align	2
 529              		.global	MPU_xTaskGetTickCount
 530              		.thumb
 531              		.thumb_func
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s 			page 15


 533              	MPU_xTaskGetTickCount:
 534              	.LFB128:
 292:./freertos/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 293:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 294:./freertos/Source/portable/Common/mpu_wrappers.c **** TickType_t MPU_xTaskGetTickCount( void )
 295:./freertos/Source/portable/Common/mpu_wrappers.c **** {
 535              		.loc 1 295 0
 536              		.cfi_startproc
 537              		@ args = 0, pretend = 0, frame = 0
 538              		@ frame_needed = 0, uses_anonymous_args = 0
 539 0000 38B5     		push	{r3, r4, r5, lr}
 540              	.LCFI14:
 541              		.cfi_def_cfa_offset 16
 542              		.cfi_offset 3, -16
 543              		.cfi_offset 4, -12
 544              		.cfi_offset 5, -8
 545              		.cfi_offset 14, -4
 296:./freertos/Source/portable/Common/mpu_wrappers.c **** TickType_t xReturn;
 297:./freertos/Source/portable/Common/mpu_wrappers.c **** BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 546              		.loc 1 297 0
 547 0002 FFF7FEFF 		bl	xPortRaisePrivilege
 548              	.LVL76:
 549 0006 0546     		mov	r5, r0
 550              	.LVL77:
 298:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 299:./freertos/Source/portable/Common/mpu_wrappers.c **** 	xReturn = xTaskGetTickCount();
 551              		.loc 1 299 0
 552 0008 FFF7FEFF 		bl	xTaskGetTickCount
 553              	.LVL78:
 554 000c 0446     		mov	r4, r0
 555              	.LVL79:
 300:./freertos/Source/portable/Common/mpu_wrappers.c **** 	vPortResetPrivilege( xRunningPrivileged );
 556              		.loc 1 300 0
 557 000e 2846     		mov	r0, r5
 558              	.LVL80:
 559 0010 FFF7FEFF 		bl	vPortResetPrivilege
 560              	.LVL81:
 301:./freertos/Source/portable/Common/mpu_wrappers.c **** 	return xReturn;
 302:./freertos/Source/portable/Common/mpu_wrappers.c **** }
 561              		.loc 1 302 0
 562 0014 2046     		mov	r0, r4
 563 0016 38BD     		pop	{r3, r4, r5, pc}
 564              		.cfi_endproc
 565              	.LFE128:
 567              		.section	.text.MPU_uxTaskGetNumberOfTasks,"ax",%progbits
 568              		.align	2
 569              		.global	MPU_uxTaskGetNumberOfTasks
 570              		.thumb
 571              		.thumb_func
 573              	MPU_uxTaskGetNumberOfTasks:
 574              	.LFB129:
 303:./freertos/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 304:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 305:./freertos/Source/portable/Common/mpu_wrappers.c **** UBaseType_t MPU_uxTaskGetNumberOfTasks( void )
 306:./freertos/Source/portable/Common/mpu_wrappers.c **** {
 575              		.loc 1 306 0
 576              		.cfi_startproc
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s 			page 16


 577              		@ args = 0, pretend = 0, frame = 0
 578              		@ frame_needed = 0, uses_anonymous_args = 0
 579 0000 38B5     		push	{r3, r4, r5, lr}
 580              	.LCFI15:
 581              		.cfi_def_cfa_offset 16
 582              		.cfi_offset 3, -16
 583              		.cfi_offset 4, -12
 584              		.cfi_offset 5, -8
 585              		.cfi_offset 14, -4
 307:./freertos/Source/portable/Common/mpu_wrappers.c **** UBaseType_t uxReturn;
 308:./freertos/Source/portable/Common/mpu_wrappers.c **** BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 586              		.loc 1 308 0
 587 0002 FFF7FEFF 		bl	xPortRaisePrivilege
 588              	.LVL82:
 589 0006 0546     		mov	r5, r0
 590              	.LVL83:
 309:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 310:./freertos/Source/portable/Common/mpu_wrappers.c **** 	uxReturn = uxTaskGetNumberOfTasks();
 591              		.loc 1 310 0
 592 0008 FFF7FEFF 		bl	uxTaskGetNumberOfTasks
 593              	.LVL84:
 594 000c 0446     		mov	r4, r0
 595              	.LVL85:
 311:./freertos/Source/portable/Common/mpu_wrappers.c **** 	vPortResetPrivilege( xRunningPrivileged );
 596              		.loc 1 311 0
 597 000e 2846     		mov	r0, r5
 598              	.LVL86:
 599 0010 FFF7FEFF 		bl	vPortResetPrivilege
 600              	.LVL87:
 312:./freertos/Source/portable/Common/mpu_wrappers.c **** 	return uxReturn;
 313:./freertos/Source/portable/Common/mpu_wrappers.c **** }
 601              		.loc 1 313 0
 602 0014 2046     		mov	r0, r4
 603 0016 38BD     		pop	{r3, r4, r5, pc}
 604              		.cfi_endproc
 605              	.LFE129:
 607              		.section	.text.MPU_pcTaskGetName,"ax",%progbits
 608              		.align	2
 609              		.global	MPU_pcTaskGetName
 610              		.thumb
 611              		.thumb_func
 613              	MPU_pcTaskGetName:
 614              	.LFB130:
 314:./freertos/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 315:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 316:./freertos/Source/portable/Common/mpu_wrappers.c **** char * MPU_pcTaskGetName( TaskHandle_t xTaskToQuery )
 317:./freertos/Source/portable/Common/mpu_wrappers.c **** {
 615              		.loc 1 317 0
 616              		.cfi_startproc
 617              		@ args = 0, pretend = 0, frame = 0
 618              		@ frame_needed = 0, uses_anonymous_args = 0
 619              	.LVL88:
 620 0000 38B5     		push	{r3, r4, r5, lr}
 621              	.LCFI16:
 622              		.cfi_def_cfa_offset 16
 623              		.cfi_offset 3, -16
 624              		.cfi_offset 4, -12
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s 			page 17


 625              		.cfi_offset 5, -8
 626              		.cfi_offset 14, -4
 627 0002 0446     		mov	r4, r0
 318:./freertos/Source/portable/Common/mpu_wrappers.c **** char *pcReturn;
 319:./freertos/Source/portable/Common/mpu_wrappers.c **** BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 628              		.loc 1 319 0
 629 0004 FFF7FEFF 		bl	xPortRaisePrivilege
 630              	.LVL89:
 631 0008 0546     		mov	r5, r0
 632              	.LVL90:
 320:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 321:./freertos/Source/portable/Common/mpu_wrappers.c **** 	pcReturn = pcTaskGetName( xTaskToQuery );
 633              		.loc 1 321 0
 634 000a 2046     		mov	r0, r4
 635              	.LVL91:
 636 000c FFF7FEFF 		bl	pcTaskGetName
 637              	.LVL92:
 638 0010 0446     		mov	r4, r0
 639              	.LVL93:
 322:./freertos/Source/portable/Common/mpu_wrappers.c **** 	vPortResetPrivilege( xRunningPrivileged );
 640              		.loc 1 322 0
 641 0012 2846     		mov	r0, r5
 642              	.LVL94:
 643 0014 FFF7FEFF 		bl	vPortResetPrivilege
 644              	.LVL95:
 323:./freertos/Source/portable/Common/mpu_wrappers.c **** 	return pcReturn;
 324:./freertos/Source/portable/Common/mpu_wrappers.c **** }
 645              		.loc 1 324 0
 646 0018 2046     		mov	r0, r4
 647 001a 38BD     		pop	{r3, r4, r5, pc}
 648              		.cfi_endproc
 649              	.LFE130:
 651              		.section	.text.MPU_xTaskGetSchedulerState,"ax",%progbits
 652              		.align	2
 653              		.global	MPU_xTaskGetSchedulerState
 654              		.thumb
 655              		.thumb_func
 657              	MPU_xTaskGetSchedulerState:
 658              	.LFB131:
 325:./freertos/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 326:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 327:./freertos/Source/portable/Common/mpu_wrappers.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
 328:./freertos/Source/portable/Common/mpu_wrappers.c **** 	TaskHandle_t MPU_xTaskGetHandle( const char *pcNameToQuery )
 329:./freertos/Source/portable/Common/mpu_wrappers.c **** 	{
 330:./freertos/Source/portable/Common/mpu_wrappers.c **** 	TaskHandle_t xReturn;
 331:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 332:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 333:./freertos/Source/portable/Common/mpu_wrappers.c **** 		xReturn = xTaskGetHandle( pcNameToQuery );
 334:./freertos/Source/portable/Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 335:./freertos/Source/portable/Common/mpu_wrappers.c **** 		return xReturn;
 336:./freertos/Source/portable/Common/mpu_wrappers.c **** 	}
 337:./freertos/Source/portable/Common/mpu_wrappers.c **** #endif
 338:./freertos/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 339:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 340:./freertos/Source/portable/Common/mpu_wrappers.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
 341:./freertos/Source/portable/Common/mpu_wrappers.c **** 	void MPU_vTaskList( char *pcWriteBuffer )
 342:./freertos/Source/portable/Common/mpu_wrappers.c **** 	{
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s 			page 18


 343:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 344:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 345:./freertos/Source/portable/Common/mpu_wrappers.c **** 		vTaskList( pcWriteBuffer );
 346:./freertos/Source/portable/Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 347:./freertos/Source/portable/Common/mpu_wrappers.c **** 	}
 348:./freertos/Source/portable/Common/mpu_wrappers.c **** #endif
 349:./freertos/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 350:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 351:./freertos/Source/portable/Common/mpu_wrappers.c **** #if ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
 352:./freertos/Source/portable/Common/mpu_wrappers.c **** 	void MPU_vTaskGetRunTimeStats( char *pcWriteBuffer )
 353:./freertos/Source/portable/Common/mpu_wrappers.c **** 	{
 354:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 355:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 356:./freertos/Source/portable/Common/mpu_wrappers.c **** 		vTaskGetRunTimeStats( pcWriteBuffer );
 357:./freertos/Source/portable/Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 358:./freertos/Source/portable/Common/mpu_wrappers.c **** 	}
 359:./freertos/Source/portable/Common/mpu_wrappers.c **** #endif
 360:./freertos/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 361:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 362:./freertos/Source/portable/Common/mpu_wrappers.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
 363:./freertos/Source/portable/Common/mpu_wrappers.c **** 	void MPU_vTaskSetApplicationTaskTag( TaskHandle_t xTask, TaskHookFunction_t pxTagValue )
 364:./freertos/Source/portable/Common/mpu_wrappers.c **** 	{
 365:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 366:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 367:./freertos/Source/portable/Common/mpu_wrappers.c **** 		vTaskSetApplicationTaskTag( xTask, pxTagValue );
 368:./freertos/Source/portable/Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 369:./freertos/Source/portable/Common/mpu_wrappers.c **** 	}
 370:./freertos/Source/portable/Common/mpu_wrappers.c **** #endif
 371:./freertos/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 372:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 373:./freertos/Source/portable/Common/mpu_wrappers.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
 374:./freertos/Source/portable/Common/mpu_wrappers.c **** 	TaskHookFunction_t MPU_xTaskGetApplicationTaskTag( TaskHandle_t xTask )
 375:./freertos/Source/portable/Common/mpu_wrappers.c **** 	{
 376:./freertos/Source/portable/Common/mpu_wrappers.c **** 	TaskHookFunction_t xReturn;
 377:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 378:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 379:./freertos/Source/portable/Common/mpu_wrappers.c **** 		xReturn = xTaskGetApplicationTaskTag( xTask );
 380:./freertos/Source/portable/Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 381:./freertos/Source/portable/Common/mpu_wrappers.c **** 		return xReturn;
 382:./freertos/Source/portable/Common/mpu_wrappers.c **** 	}
 383:./freertos/Source/portable/Common/mpu_wrappers.c **** #endif
 384:./freertos/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 385:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 386:./freertos/Source/portable/Common/mpu_wrappers.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
 387:./freertos/Source/portable/Common/mpu_wrappers.c **** 	void MPU_vTaskSetThreadLocalStoragePointer( TaskHandle_t xTaskToSet, BaseType_t xIndex, void *pvVa
 388:./freertos/Source/portable/Common/mpu_wrappers.c **** 	{
 389:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 390:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 391:./freertos/Source/portable/Common/mpu_wrappers.c **** 		vTaskSetThreadLocalStoragePointer( xTaskToSet, xIndex, pvValue );
 392:./freertos/Source/portable/Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 393:./freertos/Source/portable/Common/mpu_wrappers.c **** 	}
 394:./freertos/Source/portable/Common/mpu_wrappers.c **** #endif
 395:./freertos/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 396:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 397:./freertos/Source/portable/Common/mpu_wrappers.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
 398:./freertos/Source/portable/Common/mpu_wrappers.c **** 	void *MPU_pvTaskGetThreadLocalStoragePointer( TaskHandle_t xTaskToQuery, BaseType_t xIndex )
 399:./freertos/Source/portable/Common/mpu_wrappers.c **** 	{
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s 			page 19


 400:./freertos/Source/portable/Common/mpu_wrappers.c **** 	void *pvReturn;
 401:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 402:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 403:./freertos/Source/portable/Common/mpu_wrappers.c **** 		pvReturn = pvTaskGetThreadLocalStoragePointer( xTaskToQuery, xIndex );
 404:./freertos/Source/portable/Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 405:./freertos/Source/portable/Common/mpu_wrappers.c **** 		return pvReturn;
 406:./freertos/Source/portable/Common/mpu_wrappers.c **** 	}
 407:./freertos/Source/portable/Common/mpu_wrappers.c **** #endif
 408:./freertos/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 409:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 410:./freertos/Source/portable/Common/mpu_wrappers.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
 411:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t MPU_xTaskCallApplicationTaskHook( TaskHandle_t xTask, void *pvParameter )
 412:./freertos/Source/portable/Common/mpu_wrappers.c **** 	{
 413:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t xReturn;
 414:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 415:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 416:./freertos/Source/portable/Common/mpu_wrappers.c **** 		xReturn = xTaskCallApplicationTaskHook( xTask, pvParameter );
 417:./freertos/Source/portable/Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 418:./freertos/Source/portable/Common/mpu_wrappers.c **** 		return xReturn;
 419:./freertos/Source/portable/Common/mpu_wrappers.c **** 	}
 420:./freertos/Source/portable/Common/mpu_wrappers.c **** #endif
 421:./freertos/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 422:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 423:./freertos/Source/portable/Common/mpu_wrappers.c **** #if ( configUSE_TRACE_FACILITY == 1 )
 424:./freertos/Source/portable/Common/mpu_wrappers.c **** 	UBaseType_t MPU_uxTaskGetSystemState( TaskStatus_t *pxTaskStatusArray, UBaseType_t uxArraySize, ui
 425:./freertos/Source/portable/Common/mpu_wrappers.c **** 	{
 426:./freertos/Source/portable/Common/mpu_wrappers.c **** 	UBaseType_t uxReturn;
 427:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 428:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 429:./freertos/Source/portable/Common/mpu_wrappers.c **** 		uxReturn = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, pulTotalRunTime );
 430:./freertos/Source/portable/Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 431:./freertos/Source/portable/Common/mpu_wrappers.c **** 		return uxReturn;
 432:./freertos/Source/portable/Common/mpu_wrappers.c **** 	}
 433:./freertos/Source/portable/Common/mpu_wrappers.c **** #endif
 434:./freertos/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 435:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 436:./freertos/Source/portable/Common/mpu_wrappers.c **** #if ( INCLUDE_uxTaskGetStackHighWaterMark == 1 )
 437:./freertos/Source/portable/Common/mpu_wrappers.c **** 	UBaseType_t MPU_uxTaskGetStackHighWaterMark( TaskHandle_t xTask )
 438:./freertos/Source/portable/Common/mpu_wrappers.c **** 	{
 439:./freertos/Source/portable/Common/mpu_wrappers.c **** 	UBaseType_t uxReturn;
 440:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 441:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 442:./freertos/Source/portable/Common/mpu_wrappers.c **** 		uxReturn = uxTaskGetStackHighWaterMark( xTask );
 443:./freertos/Source/portable/Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 444:./freertos/Source/portable/Common/mpu_wrappers.c **** 		return uxReturn;
 445:./freertos/Source/portable/Common/mpu_wrappers.c **** 	}
 446:./freertos/Source/portable/Common/mpu_wrappers.c **** #endif
 447:./freertos/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 448:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 449:./freertos/Source/portable/Common/mpu_wrappers.c **** #if ( INCLUDE_xTaskGetCurrentTaskHandle == 1 )
 450:./freertos/Source/portable/Common/mpu_wrappers.c **** 	TaskHandle_t MPU_xTaskGetCurrentTaskHandle( void )
 451:./freertos/Source/portable/Common/mpu_wrappers.c **** 	{
 452:./freertos/Source/portable/Common/mpu_wrappers.c **** 	TaskHandle_t xReturn;
 453:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 454:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 455:./freertos/Source/portable/Common/mpu_wrappers.c **** 		xReturn = xTaskGetCurrentTaskHandle();
 456:./freertos/Source/portable/Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s 			page 20


 457:./freertos/Source/portable/Common/mpu_wrappers.c **** 		return xReturn;
 458:./freertos/Source/portable/Common/mpu_wrappers.c **** 	}
 459:./freertos/Source/portable/Common/mpu_wrappers.c **** #endif
 460:./freertos/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 461:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 462:./freertos/Source/portable/Common/mpu_wrappers.c **** #if ( INCLUDE_xTaskGetSchedulerState == 1 )
 463:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t MPU_xTaskGetSchedulerState( void )
 464:./freertos/Source/portable/Common/mpu_wrappers.c **** 	{
 659              		.loc 1 464 0
 660              		.cfi_startproc
 661              		@ args = 0, pretend = 0, frame = 0
 662              		@ frame_needed = 0, uses_anonymous_args = 0
 663 0000 38B5     		push	{r3, r4, r5, lr}
 664              	.LCFI17:
 665              		.cfi_def_cfa_offset 16
 666              		.cfi_offset 3, -16
 667              		.cfi_offset 4, -12
 668              		.cfi_offset 5, -8
 669              		.cfi_offset 14, -4
 465:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t xReturn;
 466:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 670              		.loc 1 466 0
 671 0002 FFF7FEFF 		bl	xPortRaisePrivilege
 672              	.LVL96:
 673 0006 0546     		mov	r5, r0
 674              	.LVL97:
 467:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 468:./freertos/Source/portable/Common/mpu_wrappers.c **** 		xReturn = xTaskGetSchedulerState();
 675              		.loc 1 468 0
 676 0008 FFF7FEFF 		bl	xTaskGetSchedulerState
 677              	.LVL98:
 678 000c 0446     		mov	r4, r0
 679              	.LVL99:
 469:./freertos/Source/portable/Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 680              		.loc 1 469 0
 681 000e 2846     		mov	r0, r5
 682              	.LVL100:
 683 0010 FFF7FEFF 		bl	vPortResetPrivilege
 684              	.LVL101:
 470:./freertos/Source/portable/Common/mpu_wrappers.c **** 		return xReturn;
 471:./freertos/Source/portable/Common/mpu_wrappers.c **** 	}
 685              		.loc 1 471 0
 686 0014 2046     		mov	r0, r4
 687 0016 38BD     		pop	{r3, r4, r5, pc}
 688              		.cfi_endproc
 689              	.LFE131:
 691              		.section	.text.MPU_vTaskSetTimeOutState,"ax",%progbits
 692              		.align	2
 693              		.global	MPU_vTaskSetTimeOutState
 694              		.thumb
 695              		.thumb_func
 697              	MPU_vTaskSetTimeOutState:
 698              	.LFB132:
 472:./freertos/Source/portable/Common/mpu_wrappers.c **** #endif
 473:./freertos/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 474:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 475:./freertos/Source/portable/Common/mpu_wrappers.c **** void MPU_vTaskSetTimeOutState( TimeOut_t * const pxTimeOut )
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s 			page 21


 476:./freertos/Source/portable/Common/mpu_wrappers.c **** {
 699              		.loc 1 476 0
 700              		.cfi_startproc
 701              		@ args = 0, pretend = 0, frame = 0
 702              		@ frame_needed = 0, uses_anonymous_args = 0
 703              	.LVL102:
 704 0000 38B5     		push	{r3, r4, r5, lr}
 705              	.LCFI18:
 706              		.cfi_def_cfa_offset 16
 707              		.cfi_offset 3, -16
 708              		.cfi_offset 4, -12
 709              		.cfi_offset 5, -8
 710              		.cfi_offset 14, -4
 711 0002 0546     		mov	r5, r0
 477:./freertos/Source/portable/Common/mpu_wrappers.c **** BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 712              		.loc 1 477 0
 713 0004 FFF7FEFF 		bl	xPortRaisePrivilege
 714              	.LVL103:
 715 0008 0446     		mov	r4, r0
 716              	.LVL104:
 478:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 479:./freertos/Source/portable/Common/mpu_wrappers.c **** 	vTaskSetTimeOutState( pxTimeOut );
 717              		.loc 1 479 0
 718 000a 2846     		mov	r0, r5
 719              	.LVL105:
 720 000c FFF7FEFF 		bl	vTaskSetTimeOutState
 721              	.LVL106:
 480:./freertos/Source/portable/Common/mpu_wrappers.c **** 	vPortResetPrivilege( xRunningPrivileged );
 722              		.loc 1 480 0
 723 0010 2046     		mov	r0, r4
 724 0012 FFF7FEFF 		bl	vPortResetPrivilege
 725              	.LVL107:
 726 0016 38BD     		pop	{r3, r4, r5, pc}
 727              		.cfi_endproc
 728              	.LFE132:
 730              		.section	.text.MPU_xTaskCheckForTimeOut,"ax",%progbits
 731              		.align	2
 732              		.global	MPU_xTaskCheckForTimeOut
 733              		.thumb
 734              		.thumb_func
 736              	MPU_xTaskCheckForTimeOut:
 737              	.LFB133:
 481:./freertos/Source/portable/Common/mpu_wrappers.c **** }
 482:./freertos/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 483:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 484:./freertos/Source/portable/Common/mpu_wrappers.c **** BaseType_t MPU_xTaskCheckForTimeOut( TimeOut_t * const pxTimeOut, TickType_t * const pxTicksToWait 
 485:./freertos/Source/portable/Common/mpu_wrappers.c **** {
 738              		.loc 1 485 0
 739              		.cfi_startproc
 740              		@ args = 0, pretend = 0, frame = 0
 741              		@ frame_needed = 0, uses_anonymous_args = 0
 742              	.LVL108:
 743 0000 70B5     		push	{r4, r5, r6, lr}
 744              	.LCFI19:
 745              		.cfi_def_cfa_offset 16
 746              		.cfi_offset 4, -16
 747              		.cfi_offset 5, -12
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s 			page 22


 748              		.cfi_offset 6, -8
 749              		.cfi_offset 14, -4
 750 0002 0446     		mov	r4, r0
 751 0004 0E46     		mov	r6, r1
 486:./freertos/Source/portable/Common/mpu_wrappers.c **** BaseType_t xReturn;
 487:./freertos/Source/portable/Common/mpu_wrappers.c **** BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 752              		.loc 1 487 0
 753 0006 FFF7FEFF 		bl	xPortRaisePrivilege
 754              	.LVL109:
 755 000a 0546     		mov	r5, r0
 756              	.LVL110:
 488:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 489:./freertos/Source/portable/Common/mpu_wrappers.c **** 	xReturn = xTaskCheckForTimeOut( pxTimeOut, pxTicksToWait );
 757              		.loc 1 489 0
 758 000c 3146     		mov	r1, r6
 759 000e 2046     		mov	r0, r4
 760              	.LVL111:
 761 0010 FFF7FEFF 		bl	xTaskCheckForTimeOut
 762              	.LVL112:
 763 0014 0446     		mov	r4, r0
 764              	.LVL113:
 490:./freertos/Source/portable/Common/mpu_wrappers.c **** 	vPortResetPrivilege( xRunningPrivileged );
 765              		.loc 1 490 0
 766 0016 2846     		mov	r0, r5
 767              	.LVL114:
 768 0018 FFF7FEFF 		bl	vPortResetPrivilege
 769              	.LVL115:
 491:./freertos/Source/portable/Common/mpu_wrappers.c **** 	return xReturn;
 492:./freertos/Source/portable/Common/mpu_wrappers.c **** }
 770              		.loc 1 492 0
 771 001c 2046     		mov	r0, r4
 772 001e 70BD     		pop	{r4, r5, r6, pc}
 773              		.cfi_endproc
 774              	.LFE133:
 776              		.section	.text.MPU_xTaskGenericNotify,"ax",%progbits
 777              		.align	2
 778              		.global	MPU_xTaskGenericNotify
 779              		.thumb
 780              		.thumb_func
 782              	MPU_xTaskGenericNotify:
 783              	.LFB134:
 493:./freertos/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 494:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 495:./freertos/Source/portable/Common/mpu_wrappers.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
 496:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t MPU_xTaskGenericNotify( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction eAc
 497:./freertos/Source/portable/Common/mpu_wrappers.c **** 	{
 784              		.loc 1 497 0
 785              		.cfi_startproc
 786              		@ args = 0, pretend = 0, frame = 0
 787              		@ frame_needed = 0, uses_anonymous_args = 0
 788              	.LVL116:
 789 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 790              	.LCFI20:
 791              		.cfi_def_cfa_offset 24
 792              		.cfi_offset 4, -24
 793              		.cfi_offset 5, -20
 794              		.cfi_offset 6, -16
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s 			page 23


 795              		.cfi_offset 7, -12
 796              		.cfi_offset 8, -8
 797              		.cfi_offset 14, -4
 798 0004 0446     		mov	r4, r0
 799 0006 0E46     		mov	r6, r1
 800 0008 1746     		mov	r7, r2
 801 000a 9846     		mov	r8, r3
 498:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t xReturn;
 499:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 802              		.loc 1 499 0
 803 000c FFF7FEFF 		bl	xPortRaisePrivilege
 804              	.LVL117:
 805 0010 0546     		mov	r5, r0
 806              	.LVL118:
 500:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 501:./freertos/Source/portable/Common/mpu_wrappers.c **** 		xReturn = xTaskGenericNotify( xTaskToNotify, ulValue, eAction, pulPreviousNotificationValue );
 807              		.loc 1 501 0
 808 0012 4346     		mov	r3, r8
 809 0014 3A46     		mov	r2, r7
 810 0016 3146     		mov	r1, r6
 811 0018 2046     		mov	r0, r4
 812              	.LVL119:
 813 001a FFF7FEFF 		bl	xTaskGenericNotify
 814              	.LVL120:
 815 001e 0446     		mov	r4, r0
 816              	.LVL121:
 502:./freertos/Source/portable/Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 817              		.loc 1 502 0
 818 0020 2846     		mov	r0, r5
 819              	.LVL122:
 820 0022 FFF7FEFF 		bl	vPortResetPrivilege
 821              	.LVL123:
 503:./freertos/Source/portable/Common/mpu_wrappers.c **** 		return xReturn;
 504:./freertos/Source/portable/Common/mpu_wrappers.c **** 	}
 822              		.loc 1 504 0
 823 0026 2046     		mov	r0, r4
 824 0028 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 825              		.cfi_endproc
 826              	.LFE134:
 828              		.section	.text.MPU_xTaskNotifyWait,"ax",%progbits
 829              		.align	2
 830              		.global	MPU_xTaskNotifyWait
 831              		.thumb
 832              		.thumb_func
 834              	MPU_xTaskNotifyWait:
 835              	.LFB135:
 505:./freertos/Source/portable/Common/mpu_wrappers.c **** #endif
 506:./freertos/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 507:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 508:./freertos/Source/portable/Common/mpu_wrappers.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
 509:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t MPU_xTaskNotifyWait( uint32_t ulBitsToClearOnEntry, uint32_t ulBitsToClearOnExit, uint3
 510:./freertos/Source/portable/Common/mpu_wrappers.c **** 	{
 836              		.loc 1 510 0
 837              		.cfi_startproc
 838              		@ args = 0, pretend = 0, frame = 0
 839              		@ frame_needed = 0, uses_anonymous_args = 0
 840              	.LVL124:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s 			page 24


 841 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 842              	.LCFI21:
 843              		.cfi_def_cfa_offset 24
 844              		.cfi_offset 4, -24
 845              		.cfi_offset 5, -20
 846              		.cfi_offset 6, -16
 847              		.cfi_offset 7, -12
 848              		.cfi_offset 8, -8
 849              		.cfi_offset 14, -4
 850 0004 0446     		mov	r4, r0
 851 0006 0E46     		mov	r6, r1
 852 0008 1746     		mov	r7, r2
 853 000a 9846     		mov	r8, r3
 511:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t xReturn;
 512:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 854              		.loc 1 512 0
 855 000c FFF7FEFF 		bl	xPortRaisePrivilege
 856              	.LVL125:
 857 0010 0546     		mov	r5, r0
 858              	.LVL126:
 513:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 514:./freertos/Source/portable/Common/mpu_wrappers.c **** 		xReturn = xTaskNotifyWait( ulBitsToClearOnEntry, ulBitsToClearOnExit, pulNotificationValue, xTick
 859              		.loc 1 514 0
 860 0012 4346     		mov	r3, r8
 861 0014 3A46     		mov	r2, r7
 862 0016 3146     		mov	r1, r6
 863 0018 2046     		mov	r0, r4
 864              	.LVL127:
 865 001a FFF7FEFF 		bl	xTaskNotifyWait
 866              	.LVL128:
 867 001e 0446     		mov	r4, r0
 868              	.LVL129:
 515:./freertos/Source/portable/Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 869              		.loc 1 515 0
 870 0020 2846     		mov	r0, r5
 871              	.LVL130:
 872 0022 FFF7FEFF 		bl	vPortResetPrivilege
 873              	.LVL131:
 516:./freertos/Source/portable/Common/mpu_wrappers.c **** 		return xReturn;
 517:./freertos/Source/portable/Common/mpu_wrappers.c **** 	}
 874              		.loc 1 517 0
 875 0026 2046     		mov	r0, r4
 876 0028 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 877              		.cfi_endproc
 878              	.LFE135:
 880              		.section	.text.MPU_ulTaskNotifyTake,"ax",%progbits
 881              		.align	2
 882              		.global	MPU_ulTaskNotifyTake
 883              		.thumb
 884              		.thumb_func
 886              	MPU_ulTaskNotifyTake:
 887              	.LFB136:
 518:./freertos/Source/portable/Common/mpu_wrappers.c **** #endif
 519:./freertos/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 520:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 521:./freertos/Source/portable/Common/mpu_wrappers.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
 522:./freertos/Source/portable/Common/mpu_wrappers.c **** 	uint32_t MPU_ulTaskNotifyTake( BaseType_t xClearCountOnExit, TickType_t xTicksToWait )
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s 			page 25


 523:./freertos/Source/portable/Common/mpu_wrappers.c **** 	{
 888              		.loc 1 523 0
 889              		.cfi_startproc
 890              		@ args = 0, pretend = 0, frame = 0
 891              		@ frame_needed = 0, uses_anonymous_args = 0
 892              	.LVL132:
 893 0000 70B5     		push	{r4, r5, r6, lr}
 894              	.LCFI22:
 895              		.cfi_def_cfa_offset 16
 896              		.cfi_offset 4, -16
 897              		.cfi_offset 5, -12
 898              		.cfi_offset 6, -8
 899              		.cfi_offset 14, -4
 900 0002 0446     		mov	r4, r0
 901 0004 0E46     		mov	r6, r1
 524:./freertos/Source/portable/Common/mpu_wrappers.c **** 	uint32_t ulReturn;
 525:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 902              		.loc 1 525 0
 903 0006 FFF7FEFF 		bl	xPortRaisePrivilege
 904              	.LVL133:
 905 000a 0546     		mov	r5, r0
 906              	.LVL134:
 526:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 527:./freertos/Source/portable/Common/mpu_wrappers.c **** 		ulReturn = ulTaskNotifyTake( xClearCountOnExit, xTicksToWait );
 907              		.loc 1 527 0
 908 000c 3146     		mov	r1, r6
 909 000e 2046     		mov	r0, r4
 910              	.LVL135:
 911 0010 FFF7FEFF 		bl	ulTaskNotifyTake
 912              	.LVL136:
 913 0014 0446     		mov	r4, r0
 914              	.LVL137:
 528:./freertos/Source/portable/Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 915              		.loc 1 528 0
 916 0016 2846     		mov	r0, r5
 917              	.LVL138:
 918 0018 FFF7FEFF 		bl	vPortResetPrivilege
 919              	.LVL139:
 529:./freertos/Source/portable/Common/mpu_wrappers.c **** 		return ulReturn;
 530:./freertos/Source/portable/Common/mpu_wrappers.c **** 	}
 920              		.loc 1 530 0
 921 001c 2046     		mov	r0, r4
 922 001e 70BD     		pop	{r4, r5, r6, pc}
 923              		.cfi_endproc
 924              	.LFE136:
 926              		.section	.text.MPU_xTaskNotifyStateClear,"ax",%progbits
 927              		.align	2
 928              		.global	MPU_xTaskNotifyStateClear
 929              		.thumb
 930              		.thumb_func
 932              	MPU_xTaskNotifyStateClear:
 933              	.LFB137:
 531:./freertos/Source/portable/Common/mpu_wrappers.c **** #endif
 532:./freertos/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 533:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 534:./freertos/Source/portable/Common/mpu_wrappers.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
 535:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t MPU_xTaskNotifyStateClear( TaskHandle_t xTask )
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s 			page 26


 536:./freertos/Source/portable/Common/mpu_wrappers.c **** 	{
 934              		.loc 1 536 0
 935              		.cfi_startproc
 936              		@ args = 0, pretend = 0, frame = 0
 937              		@ frame_needed = 0, uses_anonymous_args = 0
 938              	.LVL140:
 939 0000 38B5     		push	{r3, r4, r5, lr}
 940              	.LCFI23:
 941              		.cfi_def_cfa_offset 16
 942              		.cfi_offset 3, -16
 943              		.cfi_offset 4, -12
 944              		.cfi_offset 5, -8
 945              		.cfi_offset 14, -4
 946 0002 0446     		mov	r4, r0
 537:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t xReturn;
 538:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 947              		.loc 1 538 0
 948 0004 FFF7FEFF 		bl	xPortRaisePrivilege
 949              	.LVL141:
 950 0008 0546     		mov	r5, r0
 951              	.LVL142:
 539:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 540:./freertos/Source/portable/Common/mpu_wrappers.c **** 		xReturn = xTaskNotifyStateClear( xTask );
 952              		.loc 1 540 0
 953 000a 2046     		mov	r0, r4
 954              	.LVL143:
 955 000c FFF7FEFF 		bl	xTaskNotifyStateClear
 956              	.LVL144:
 957 0010 0446     		mov	r4, r0
 958              	.LVL145:
 541:./freertos/Source/portable/Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 959              		.loc 1 541 0
 960 0012 2846     		mov	r0, r5
 961              	.LVL146:
 962 0014 FFF7FEFF 		bl	vPortResetPrivilege
 963              	.LVL147:
 542:./freertos/Source/portable/Common/mpu_wrappers.c **** 		return xReturn;
 543:./freertos/Source/portable/Common/mpu_wrappers.c **** 	}
 964              		.loc 1 543 0
 965 0018 2046     		mov	r0, r4
 966 001a 38BD     		pop	{r3, r4, r5, pc}
 967              		.cfi_endproc
 968              	.LFE137:
 970              		.section	.text.MPU_xQueueGenericCreate,"ax",%progbits
 971              		.align	2
 972              		.global	MPU_xQueueGenericCreate
 973              		.thumb
 974              		.thumb_func
 976              	MPU_xQueueGenericCreate:
 977              	.LFB138:
 544:./freertos/Source/portable/Common/mpu_wrappers.c **** #endif
 545:./freertos/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 546:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 547:./freertos/Source/portable/Common/mpu_wrappers.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 548:./freertos/Source/portable/Common/mpu_wrappers.c **** 	QueueHandle_t MPU_xQueueGenericCreate( UBaseType_t uxQueueLength, UBaseType_t uxItemSize, uint8_t 
 549:./freertos/Source/portable/Common/mpu_wrappers.c **** 	{
 978              		.loc 1 549 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s 			page 27


 979              		.cfi_startproc
 980              		@ args = 0, pretend = 0, frame = 0
 981              		@ frame_needed = 0, uses_anonymous_args = 0
 982              	.LVL148:
 983 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 984              	.LCFI24:
 985              		.cfi_def_cfa_offset 24
 986              		.cfi_offset 3, -24
 987              		.cfi_offset 4, -20
 988              		.cfi_offset 5, -16
 989              		.cfi_offset 6, -12
 990              		.cfi_offset 7, -8
 991              		.cfi_offset 14, -4
 992 0002 0446     		mov	r4, r0
 993 0004 0E46     		mov	r6, r1
 994 0006 1746     		mov	r7, r2
 550:./freertos/Source/portable/Common/mpu_wrappers.c **** 	QueueHandle_t xReturn;
 551:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 995              		.loc 1 551 0
 996 0008 FFF7FEFF 		bl	xPortRaisePrivilege
 997              	.LVL149:
 998 000c 0546     		mov	r5, r0
 999              	.LVL150:
 552:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 553:./freertos/Source/portable/Common/mpu_wrappers.c **** 		xReturn = xQueueGenericCreate( uxQueueLength, uxItemSize, ucQueueType );
 1000              		.loc 1 553 0
 1001 000e 3A46     		mov	r2, r7
 1002 0010 3146     		mov	r1, r6
 1003 0012 2046     		mov	r0, r4
 1004              	.LVL151:
 1005 0014 FFF7FEFF 		bl	xQueueGenericCreate
 1006              	.LVL152:
 1007 0018 0446     		mov	r4, r0
 1008              	.LVL153:
 554:./freertos/Source/portable/Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 1009              		.loc 1 554 0
 1010 001a 2846     		mov	r0, r5
 1011              	.LVL154:
 1012 001c FFF7FEFF 		bl	vPortResetPrivilege
 1013              	.LVL155:
 555:./freertos/Source/portable/Common/mpu_wrappers.c **** 		return xReturn;
 556:./freertos/Source/portable/Common/mpu_wrappers.c **** 	}
 1014              		.loc 1 556 0
 1015 0020 2046     		mov	r0, r4
 1016 0022 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1017              		.cfi_endproc
 1018              	.LFE138:
 1020              		.section	.text.MPU_xQueueGenericReset,"ax",%progbits
 1021              		.align	2
 1022              		.global	MPU_xQueueGenericReset
 1023              		.thumb
 1024              		.thumb_func
 1026              	MPU_xQueueGenericReset:
 1027              	.LFB139:
 557:./freertos/Source/portable/Common/mpu_wrappers.c **** #endif
 558:./freertos/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 559:./freertos/Source/portable/Common/mpu_wrappers.c **** 
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s 			page 28


 560:./freertos/Source/portable/Common/mpu_wrappers.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 561:./freertos/Source/portable/Common/mpu_wrappers.c **** 	QueueHandle_t MPU_xQueueGenericCreateStatic( const UBaseType_t uxQueueLength, const UBaseType_t ux
 562:./freertos/Source/portable/Common/mpu_wrappers.c **** 	{
 563:./freertos/Source/portable/Common/mpu_wrappers.c **** 	QueueHandle_t xReturn;
 564:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 565:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 566:./freertos/Source/portable/Common/mpu_wrappers.c **** 		xReturn = xQueueGenericCreateStatic( uxQueueLength, uxItemSize, pucQueueStorage, pxStaticQueue, u
 567:./freertos/Source/portable/Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 568:./freertos/Source/portable/Common/mpu_wrappers.c **** 		return xReturn;
 569:./freertos/Source/portable/Common/mpu_wrappers.c **** 	}
 570:./freertos/Source/portable/Common/mpu_wrappers.c **** #endif
 571:./freertos/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 572:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 573:./freertos/Source/portable/Common/mpu_wrappers.c **** BaseType_t MPU_xQueueGenericReset( QueueHandle_t pxQueue, BaseType_t xNewQueue )
 574:./freertos/Source/portable/Common/mpu_wrappers.c **** {
 1028              		.loc 1 574 0
 1029              		.cfi_startproc
 1030              		@ args = 0, pretend = 0, frame = 0
 1031              		@ frame_needed = 0, uses_anonymous_args = 0
 1032              	.LVL156:
 1033 0000 70B5     		push	{r4, r5, r6, lr}
 1034              	.LCFI25:
 1035              		.cfi_def_cfa_offset 16
 1036              		.cfi_offset 4, -16
 1037              		.cfi_offset 5, -12
 1038              		.cfi_offset 6, -8
 1039              		.cfi_offset 14, -4
 1040 0002 0446     		mov	r4, r0
 1041 0004 0E46     		mov	r6, r1
 575:./freertos/Source/portable/Common/mpu_wrappers.c **** BaseType_t xReturn;
 576:./freertos/Source/portable/Common/mpu_wrappers.c **** BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 1042              		.loc 1 576 0
 1043 0006 FFF7FEFF 		bl	xPortRaisePrivilege
 1044              	.LVL157:
 1045 000a 0546     		mov	r5, r0
 1046              	.LVL158:
 577:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 578:./freertos/Source/portable/Common/mpu_wrappers.c **** 	xReturn = xQueueGenericReset( pxQueue, xNewQueue );
 1047              		.loc 1 578 0
 1048 000c 3146     		mov	r1, r6
 1049 000e 2046     		mov	r0, r4
 1050              	.LVL159:
 1051 0010 FFF7FEFF 		bl	xQueueGenericReset
 1052              	.LVL160:
 1053 0014 0446     		mov	r4, r0
 1054              	.LVL161:
 579:./freertos/Source/portable/Common/mpu_wrappers.c **** 	vPortResetPrivilege( xRunningPrivileged );
 1055              		.loc 1 579 0
 1056 0016 2846     		mov	r0, r5
 1057              	.LVL162:
 1058 0018 FFF7FEFF 		bl	vPortResetPrivilege
 1059              	.LVL163:
 580:./freertos/Source/portable/Common/mpu_wrappers.c **** 	return xReturn;
 581:./freertos/Source/portable/Common/mpu_wrappers.c **** }
 1060              		.loc 1 581 0
 1061 001c 2046     		mov	r0, r4
 1062 001e 70BD     		pop	{r4, r5, r6, pc}
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s 			page 29


 1063              		.cfi_endproc
 1064              	.LFE139:
 1066              		.section	.text.MPU_xQueueGenericSend,"ax",%progbits
 1067              		.align	2
 1068              		.global	MPU_xQueueGenericSend
 1069              		.thumb
 1070              		.thumb_func
 1072              	MPU_xQueueGenericSend:
 1073              	.LFB140:
 582:./freertos/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 583:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 584:./freertos/Source/portable/Common/mpu_wrappers.c **** BaseType_t MPU_xQueueGenericSend( QueueHandle_t xQueue, const void * const pvItemToQueue, TickType_
 585:./freertos/Source/portable/Common/mpu_wrappers.c **** {
 1074              		.loc 1 585 0
 1075              		.cfi_startproc
 1076              		@ args = 0, pretend = 0, frame = 0
 1077              		@ frame_needed = 0, uses_anonymous_args = 0
 1078              	.LVL164:
 1079 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1080              	.LCFI26:
 1081              		.cfi_def_cfa_offset 24
 1082              		.cfi_offset 4, -24
 1083              		.cfi_offset 5, -20
 1084              		.cfi_offset 6, -16
 1085              		.cfi_offset 7, -12
 1086              		.cfi_offset 8, -8
 1087              		.cfi_offset 14, -4
 1088 0004 0446     		mov	r4, r0
 1089 0006 0E46     		mov	r6, r1
 1090 0008 1746     		mov	r7, r2
 1091 000a 9846     		mov	r8, r3
 586:./freertos/Source/portable/Common/mpu_wrappers.c **** BaseType_t xReturn;
 587:./freertos/Source/portable/Common/mpu_wrappers.c **** BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 1092              		.loc 1 587 0
 1093 000c FFF7FEFF 		bl	xPortRaisePrivilege
 1094              	.LVL165:
 1095 0010 0546     		mov	r5, r0
 1096              	.LVL166:
 588:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 589:./freertos/Source/portable/Common/mpu_wrappers.c **** 	xReturn = xQueueGenericSend( xQueue, pvItemToQueue, xTicksToWait, xCopyPosition );
 1097              		.loc 1 589 0
 1098 0012 4346     		mov	r3, r8
 1099 0014 3A46     		mov	r2, r7
 1100 0016 3146     		mov	r1, r6
 1101 0018 2046     		mov	r0, r4
 1102              	.LVL167:
 1103 001a FFF7FEFF 		bl	xQueueGenericSend
 1104              	.LVL168:
 1105 001e 0446     		mov	r4, r0
 1106              	.LVL169:
 590:./freertos/Source/portable/Common/mpu_wrappers.c **** 	vPortResetPrivilege( xRunningPrivileged );
 1107              		.loc 1 590 0
 1108 0020 2846     		mov	r0, r5
 1109              	.LVL170:
 1110 0022 FFF7FEFF 		bl	vPortResetPrivilege
 1111              	.LVL171:
 591:./freertos/Source/portable/Common/mpu_wrappers.c **** 	return xReturn;
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s 			page 30


 592:./freertos/Source/portable/Common/mpu_wrappers.c **** }
 1112              		.loc 1 592 0
 1113 0026 2046     		mov	r0, r4
 1114 0028 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1115              		.cfi_endproc
 1116              	.LFE140:
 1118              		.section	.text.MPU_uxQueueMessagesWaiting,"ax",%progbits
 1119              		.align	2
 1120              		.global	MPU_uxQueueMessagesWaiting
 1121              		.thumb
 1122              		.thumb_func
 1124              	MPU_uxQueueMessagesWaiting:
 1125              	.LFB141:
 593:./freertos/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 594:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 595:./freertos/Source/portable/Common/mpu_wrappers.c **** UBaseType_t MPU_uxQueueMessagesWaiting( const QueueHandle_t pxQueue )
 596:./freertos/Source/portable/Common/mpu_wrappers.c **** {
 1126              		.loc 1 596 0
 1127              		.cfi_startproc
 1128              		@ args = 0, pretend = 0, frame = 0
 1129              		@ frame_needed = 0, uses_anonymous_args = 0
 1130              	.LVL172:
 1131 0000 38B5     		push	{r3, r4, r5, lr}
 1132              	.LCFI27:
 1133              		.cfi_def_cfa_offset 16
 1134              		.cfi_offset 3, -16
 1135              		.cfi_offset 4, -12
 1136              		.cfi_offset 5, -8
 1137              		.cfi_offset 14, -4
 1138 0002 0446     		mov	r4, r0
 597:./freertos/Source/portable/Common/mpu_wrappers.c **** BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 1139              		.loc 1 597 0
 1140 0004 FFF7FEFF 		bl	xPortRaisePrivilege
 1141              	.LVL173:
 1142 0008 0546     		mov	r5, r0
 1143              	.LVL174:
 598:./freertos/Source/portable/Common/mpu_wrappers.c **** UBaseType_t uxReturn;
 599:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 600:./freertos/Source/portable/Common/mpu_wrappers.c **** 	uxReturn = uxQueueMessagesWaiting( pxQueue );
 1144              		.loc 1 600 0
 1145 000a 2046     		mov	r0, r4
 1146              	.LVL175:
 1147 000c FFF7FEFF 		bl	uxQueueMessagesWaiting
 1148              	.LVL176:
 1149 0010 0446     		mov	r4, r0
 1150              	.LVL177:
 601:./freertos/Source/portable/Common/mpu_wrappers.c **** 	vPortResetPrivilege( xRunningPrivileged );
 1151              		.loc 1 601 0
 1152 0012 2846     		mov	r0, r5
 1153              	.LVL178:
 1154 0014 FFF7FEFF 		bl	vPortResetPrivilege
 1155              	.LVL179:
 602:./freertos/Source/portable/Common/mpu_wrappers.c **** 	return uxReturn;
 603:./freertos/Source/portable/Common/mpu_wrappers.c **** }
 1156              		.loc 1 603 0
 1157 0018 2046     		mov	r0, r4
 1158 001a 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s 			page 31


 1159              		.cfi_endproc
 1160              	.LFE141:
 1162              		.section	.text.MPU_uxQueueSpacesAvailable,"ax",%progbits
 1163              		.align	2
 1164              		.global	MPU_uxQueueSpacesAvailable
 1165              		.thumb
 1166              		.thumb_func
 1168              	MPU_uxQueueSpacesAvailable:
 1169              	.LFB142:
 604:./freertos/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 605:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 606:./freertos/Source/portable/Common/mpu_wrappers.c **** UBaseType_t MPU_uxQueueSpacesAvailable( const QueueHandle_t xQueue )
 607:./freertos/Source/portable/Common/mpu_wrappers.c **** {
 1170              		.loc 1 607 0
 1171              		.cfi_startproc
 1172              		@ args = 0, pretend = 0, frame = 0
 1173              		@ frame_needed = 0, uses_anonymous_args = 0
 1174              	.LVL180:
 1175 0000 38B5     		push	{r3, r4, r5, lr}
 1176              	.LCFI28:
 1177              		.cfi_def_cfa_offset 16
 1178              		.cfi_offset 3, -16
 1179              		.cfi_offset 4, -12
 1180              		.cfi_offset 5, -8
 1181              		.cfi_offset 14, -4
 1182 0002 0446     		mov	r4, r0
 608:./freertos/Source/portable/Common/mpu_wrappers.c **** BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 1183              		.loc 1 608 0
 1184 0004 FFF7FEFF 		bl	xPortRaisePrivilege
 1185              	.LVL181:
 1186 0008 0546     		mov	r5, r0
 1187              	.LVL182:
 609:./freertos/Source/portable/Common/mpu_wrappers.c **** UBaseType_t uxReturn;
 610:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 611:./freertos/Source/portable/Common/mpu_wrappers.c **** 	uxReturn = uxQueueSpacesAvailable( xQueue );
 1188              		.loc 1 611 0
 1189 000a 2046     		mov	r0, r4
 1190              	.LVL183:
 1191 000c FFF7FEFF 		bl	uxQueueSpacesAvailable
 1192              	.LVL184:
 1193 0010 0446     		mov	r4, r0
 1194              	.LVL185:
 612:./freertos/Source/portable/Common/mpu_wrappers.c **** 	vPortResetPrivilege( xRunningPrivileged );
 1195              		.loc 1 612 0
 1196 0012 2846     		mov	r0, r5
 1197              	.LVL186:
 1198 0014 FFF7FEFF 		bl	vPortResetPrivilege
 1199              	.LVL187:
 613:./freertos/Source/portable/Common/mpu_wrappers.c **** 	return uxReturn;
 614:./freertos/Source/portable/Common/mpu_wrappers.c **** }
 1200              		.loc 1 614 0
 1201 0018 2046     		mov	r0, r4
 1202 001a 38BD     		pop	{r3, r4, r5, pc}
 1203              		.cfi_endproc
 1204              	.LFE142:
 1206              		.section	.text.MPU_xQueueGenericReceive,"ax",%progbits
 1207              		.align	2
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s 			page 32


 1208              		.global	MPU_xQueueGenericReceive
 1209              		.thumb
 1210              		.thumb_func
 1212              	MPU_xQueueGenericReceive:
 1213              	.LFB143:
 615:./freertos/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 616:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 617:./freertos/Source/portable/Common/mpu_wrappers.c **** BaseType_t MPU_xQueueGenericReceive( QueueHandle_t pxQueue, void * const pvBuffer, TickType_t xTick
 618:./freertos/Source/portable/Common/mpu_wrappers.c **** {
 1214              		.loc 1 618 0
 1215              		.cfi_startproc
 1216              		@ args = 0, pretend = 0, frame = 0
 1217              		@ frame_needed = 0, uses_anonymous_args = 0
 1218              	.LVL188:
 1219 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1220              	.LCFI29:
 1221              		.cfi_def_cfa_offset 24
 1222              		.cfi_offset 4, -24
 1223              		.cfi_offset 5, -20
 1224              		.cfi_offset 6, -16
 1225              		.cfi_offset 7, -12
 1226              		.cfi_offset 8, -8
 1227              		.cfi_offset 14, -4
 1228 0004 0446     		mov	r4, r0
 1229 0006 0E46     		mov	r6, r1
 1230 0008 1746     		mov	r7, r2
 1231 000a 9846     		mov	r8, r3
 619:./freertos/Source/portable/Common/mpu_wrappers.c **** BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 1232              		.loc 1 619 0
 1233 000c FFF7FEFF 		bl	xPortRaisePrivilege
 1234              	.LVL189:
 1235 0010 0546     		mov	r5, r0
 1236              	.LVL190:
 620:./freertos/Source/portable/Common/mpu_wrappers.c **** BaseType_t xReturn;
 621:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 622:./freertos/Source/portable/Common/mpu_wrappers.c **** 	xReturn = xQueueGenericReceive( pxQueue, pvBuffer, xTicksToWait, xJustPeeking );
 1237              		.loc 1 622 0
 1238 0012 4346     		mov	r3, r8
 1239 0014 3A46     		mov	r2, r7
 1240 0016 3146     		mov	r1, r6
 1241 0018 2046     		mov	r0, r4
 1242              	.LVL191:
 1243 001a FFF7FEFF 		bl	xQueueGenericReceive
 1244              	.LVL192:
 1245 001e 0446     		mov	r4, r0
 1246              	.LVL193:
 623:./freertos/Source/portable/Common/mpu_wrappers.c **** 	vPortResetPrivilege( xRunningPrivileged );
 1247              		.loc 1 623 0
 1248 0020 2846     		mov	r0, r5
 1249              	.LVL194:
 1250 0022 FFF7FEFF 		bl	vPortResetPrivilege
 1251              	.LVL195:
 624:./freertos/Source/portable/Common/mpu_wrappers.c **** 	return xReturn;
 625:./freertos/Source/portable/Common/mpu_wrappers.c **** }
 1252              		.loc 1 625 0
 1253 0026 2046     		mov	r0, r4
 1254 0028 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s 			page 33


 1255              		.cfi_endproc
 1256              	.LFE143:
 1258              		.section	.text.MPU_xQueuePeekFromISR,"ax",%progbits
 1259              		.align	2
 1260              		.global	MPU_xQueuePeekFromISR
 1261              		.thumb
 1262              		.thumb_func
 1264              	MPU_xQueuePeekFromISR:
 1265              	.LFB144:
 626:./freertos/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 627:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 628:./freertos/Source/portable/Common/mpu_wrappers.c **** BaseType_t MPU_xQueuePeekFromISR( QueueHandle_t pxQueue, void * const pvBuffer )
 629:./freertos/Source/portable/Common/mpu_wrappers.c **** {
 1266              		.loc 1 629 0
 1267              		.cfi_startproc
 1268              		@ args = 0, pretend = 0, frame = 0
 1269              		@ frame_needed = 0, uses_anonymous_args = 0
 1270              	.LVL196:
 1271 0000 70B5     		push	{r4, r5, r6, lr}
 1272              	.LCFI30:
 1273              		.cfi_def_cfa_offset 16
 1274              		.cfi_offset 4, -16
 1275              		.cfi_offset 5, -12
 1276              		.cfi_offset 6, -8
 1277              		.cfi_offset 14, -4
 1278 0002 0446     		mov	r4, r0
 1279 0004 0E46     		mov	r6, r1
 630:./freertos/Source/portable/Common/mpu_wrappers.c **** BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 1280              		.loc 1 630 0
 1281 0006 FFF7FEFF 		bl	xPortRaisePrivilege
 1282              	.LVL197:
 1283 000a 0546     		mov	r5, r0
 1284              	.LVL198:
 631:./freertos/Source/portable/Common/mpu_wrappers.c **** BaseType_t xReturn;
 632:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 633:./freertos/Source/portable/Common/mpu_wrappers.c **** 	xReturn = xQueuePeekFromISR( pxQueue, pvBuffer );
 1285              		.loc 1 633 0
 1286 000c 3146     		mov	r1, r6
 1287 000e 2046     		mov	r0, r4
 1288              	.LVL199:
 1289 0010 FFF7FEFF 		bl	xQueuePeekFromISR
 1290              	.LVL200:
 1291 0014 0446     		mov	r4, r0
 1292              	.LVL201:
 634:./freertos/Source/portable/Common/mpu_wrappers.c **** 	vPortResetPrivilege( xRunningPrivileged );
 1293              		.loc 1 634 0
 1294 0016 2846     		mov	r0, r5
 1295              	.LVL202:
 1296 0018 FFF7FEFF 		bl	vPortResetPrivilege
 1297              	.LVL203:
 635:./freertos/Source/portable/Common/mpu_wrappers.c **** 	return xReturn;
 636:./freertos/Source/portable/Common/mpu_wrappers.c **** }
 1298              		.loc 1 636 0
 1299 001c 2046     		mov	r0, r4
 1300 001e 70BD     		pop	{r4, r5, r6, pc}
 1301              		.cfi_endproc
 1302              	.LFE144:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s 			page 34


 1304              		.section	.text.MPU_xQueueGetMutexHolder,"ax",%progbits
 1305              		.align	2
 1306              		.global	MPU_xQueueGetMutexHolder
 1307              		.thumb
 1308              		.thumb_func
 1310              	MPU_xQueueGetMutexHolder:
 1311              	.LFB145:
 637:./freertos/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 638:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 639:./freertos/Source/portable/Common/mpu_wrappers.c **** void* MPU_xQueueGetMutexHolder( QueueHandle_t xSemaphore )
 640:./freertos/Source/portable/Common/mpu_wrappers.c **** {
 1312              		.loc 1 640 0
 1313              		.cfi_startproc
 1314              		@ args = 0, pretend = 0, frame = 0
 1315              		@ frame_needed = 0, uses_anonymous_args = 0
 1316              	.LVL204:
 1317 0000 38B5     		push	{r3, r4, r5, lr}
 1318              	.LCFI31:
 1319              		.cfi_def_cfa_offset 16
 1320              		.cfi_offset 3, -16
 1321              		.cfi_offset 4, -12
 1322              		.cfi_offset 5, -8
 1323              		.cfi_offset 14, -4
 1324 0002 0446     		mov	r4, r0
 641:./freertos/Source/portable/Common/mpu_wrappers.c **** BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 1325              		.loc 1 641 0
 1326 0004 FFF7FEFF 		bl	xPortRaisePrivilege
 1327              	.LVL205:
 1328 0008 0546     		mov	r5, r0
 1329              	.LVL206:
 642:./freertos/Source/portable/Common/mpu_wrappers.c **** void * xReturn;
 643:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 644:./freertos/Source/portable/Common/mpu_wrappers.c **** 	xReturn = ( void * ) xQueueGetMutexHolder( xSemaphore );
 1330              		.loc 1 644 0
 1331 000a 2046     		mov	r0, r4
 1332              	.LVL207:
 1333 000c FFF7FEFF 		bl	xQueueGetMutexHolder
 1334              	.LVL208:
 1335 0010 0446     		mov	r4, r0
 1336              	.LVL209:
 645:./freertos/Source/portable/Common/mpu_wrappers.c **** 	vPortResetPrivilege( xRunningPrivileged );
 1337              		.loc 1 645 0
 1338 0012 2846     		mov	r0, r5
 1339              	.LVL210:
 1340 0014 FFF7FEFF 		bl	vPortResetPrivilege
 1341              	.LVL211:
 646:./freertos/Source/portable/Common/mpu_wrappers.c **** 	return xReturn;
 647:./freertos/Source/portable/Common/mpu_wrappers.c **** }
 1342              		.loc 1 647 0
 1343 0018 2046     		mov	r0, r4
 1344 001a 38BD     		pop	{r3, r4, r5, pc}
 1345              		.cfi_endproc
 1346              	.LFE145:
 1348              		.section	.text.MPU_xQueueCreateMutex,"ax",%progbits
 1349              		.align	2
 1350              		.global	MPU_xQueueCreateMutex
 1351              		.thumb
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s 			page 35


 1352              		.thumb_func
 1354              	MPU_xQueueCreateMutex:
 1355              	.LFB146:
 648:./freertos/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 649:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 650:./freertos/Source/portable/Common/mpu_wrappers.c **** #if( ( configUSE_MUTEXES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 651:./freertos/Source/portable/Common/mpu_wrappers.c **** 	QueueHandle_t MPU_xQueueCreateMutex( const uint8_t ucQueueType )
 652:./freertos/Source/portable/Common/mpu_wrappers.c **** 	{
 1356              		.loc 1 652 0
 1357              		.cfi_startproc
 1358              		@ args = 0, pretend = 0, frame = 0
 1359              		@ frame_needed = 0, uses_anonymous_args = 0
 1360              	.LVL212:
 1361 0000 38B5     		push	{r3, r4, r5, lr}
 1362              	.LCFI32:
 1363              		.cfi_def_cfa_offset 16
 1364              		.cfi_offset 3, -16
 1365              		.cfi_offset 4, -12
 1366              		.cfi_offset 5, -8
 1367              		.cfi_offset 14, -4
 1368 0002 0446     		mov	r4, r0
 653:./freertos/Source/portable/Common/mpu_wrappers.c **** 	QueueHandle_t xReturn;
 654:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 1369              		.loc 1 654 0
 1370 0004 FFF7FEFF 		bl	xPortRaisePrivilege
 1371              	.LVL213:
 1372 0008 0546     		mov	r5, r0
 1373              	.LVL214:
 655:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 656:./freertos/Source/portable/Common/mpu_wrappers.c **** 		xReturn = xQueueCreateMutex( ucQueueType );
 1374              		.loc 1 656 0
 1375 000a 2046     		mov	r0, r4
 1376              	.LVL215:
 1377 000c FFF7FEFF 		bl	xQueueCreateMutex
 1378              	.LVL216:
 1379 0010 0446     		mov	r4, r0
 1380              	.LVL217:
 657:./freertos/Source/portable/Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 1381              		.loc 1 657 0
 1382 0012 2846     		mov	r0, r5
 1383              	.LVL218:
 1384 0014 FFF7FEFF 		bl	vPortResetPrivilege
 1385              	.LVL219:
 658:./freertos/Source/portable/Common/mpu_wrappers.c **** 		return xReturn;
 659:./freertos/Source/portable/Common/mpu_wrappers.c **** 	}
 1386              		.loc 1 659 0
 1387 0018 2046     		mov	r0, r4
 1388 001a 38BD     		pop	{r3, r4, r5, pc}
 1389              		.cfi_endproc
 1390              	.LFE146:
 1392              		.section	.text.MPU_xQueueTakeMutexRecursive,"ax",%progbits
 1393              		.align	2
 1394              		.global	MPU_xQueueTakeMutexRecursive
 1395              		.thumb
 1396              		.thumb_func
 1398              	MPU_xQueueTakeMutexRecursive:
 1399              	.LFB147:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s 			page 36


 660:./freertos/Source/portable/Common/mpu_wrappers.c **** #endif
 661:./freertos/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 662:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 663:./freertos/Source/portable/Common/mpu_wrappers.c **** #if( ( configUSE_MUTEXES == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 664:./freertos/Source/portable/Common/mpu_wrappers.c **** 	QueueHandle_t MPU_xQueueCreateMutexStatic( const uint8_t ucQueueType, StaticQueue_t *pxStaticQueue
 665:./freertos/Source/portable/Common/mpu_wrappers.c **** 	{
 666:./freertos/Source/portable/Common/mpu_wrappers.c **** 	QueueHandle_t xReturn;
 667:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 668:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 669:./freertos/Source/portable/Common/mpu_wrappers.c **** 		xReturn = xQueueCreateMutexStatic( ucQueueType, pxStaticQueue );
 670:./freertos/Source/portable/Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 671:./freertos/Source/portable/Common/mpu_wrappers.c **** 		return xReturn;
 672:./freertos/Source/portable/Common/mpu_wrappers.c **** 	}
 673:./freertos/Source/portable/Common/mpu_wrappers.c **** #endif
 674:./freertos/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 675:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 676:./freertos/Source/portable/Common/mpu_wrappers.c **** #if( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 677:./freertos/Source/portable/Common/mpu_wrappers.c **** 	QueueHandle_t MPU_xQueueCreateCountingSemaphore( UBaseType_t uxCountValue, UBaseType_t uxInitialCo
 678:./freertos/Source/portable/Common/mpu_wrappers.c **** 	{
 679:./freertos/Source/portable/Common/mpu_wrappers.c **** 	QueueHandle_t xReturn;
 680:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 681:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 682:./freertos/Source/portable/Common/mpu_wrappers.c **** 		xReturn = xQueueCreateCountingSemaphore( uxCountValue, uxInitialCount );
 683:./freertos/Source/portable/Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 684:./freertos/Source/portable/Common/mpu_wrappers.c **** 		return xReturn;
 685:./freertos/Source/portable/Common/mpu_wrappers.c **** 	}
 686:./freertos/Source/portable/Common/mpu_wrappers.c **** #endif
 687:./freertos/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 688:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 689:./freertos/Source/portable/Common/mpu_wrappers.c **** #if( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 690:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 691:./freertos/Source/portable/Common/mpu_wrappers.c **** 	QueueHandle_t MPU_xQueueCreateCountingSemaphoreStatic( const UBaseType_t uxMaxCount, const UBaseTy
 692:./freertos/Source/portable/Common/mpu_wrappers.c **** 	{
 693:./freertos/Source/portable/Common/mpu_wrappers.c **** 	QueueHandle_t xReturn;
 694:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 695:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 696:./freertos/Source/portable/Common/mpu_wrappers.c **** 		xReturn = xQueueCreateCountingSemaphoreStatic( uxMaxCount, uxInitialCount, pxStaticQueue );
 697:./freertos/Source/portable/Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 698:./freertos/Source/portable/Common/mpu_wrappers.c **** 		return xReturn;
 699:./freertos/Source/portable/Common/mpu_wrappers.c **** 	}
 700:./freertos/Source/portable/Common/mpu_wrappers.c **** #endif
 701:./freertos/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 702:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 703:./freertos/Source/portable/Common/mpu_wrappers.c **** #if ( configUSE_MUTEXES == 1 )
 704:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t MPU_xQueueTakeMutexRecursive( QueueHandle_t xMutex, TickType_t xBlockTime )
 705:./freertos/Source/portable/Common/mpu_wrappers.c **** 	{
 1400              		.loc 1 705 0
 1401              		.cfi_startproc
 1402              		@ args = 0, pretend = 0, frame = 0
 1403              		@ frame_needed = 0, uses_anonymous_args = 0
 1404              	.LVL220:
 1405 0000 70B5     		push	{r4, r5, r6, lr}
 1406              	.LCFI33:
 1407              		.cfi_def_cfa_offset 16
 1408              		.cfi_offset 4, -16
 1409              		.cfi_offset 5, -12
 1410              		.cfi_offset 6, -8
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s 			page 37


 1411              		.cfi_offset 14, -4
 1412 0002 0446     		mov	r4, r0
 1413 0004 0E46     		mov	r6, r1
 706:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t xReturn;
 707:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 1414              		.loc 1 707 0
 1415 0006 FFF7FEFF 		bl	xPortRaisePrivilege
 1416              	.LVL221:
 1417 000a 0546     		mov	r5, r0
 1418              	.LVL222:
 708:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 709:./freertos/Source/portable/Common/mpu_wrappers.c **** 		xReturn = xQueueTakeMutexRecursive( xMutex, xBlockTime );
 1419              		.loc 1 709 0
 1420 000c 3146     		mov	r1, r6
 1421 000e 2046     		mov	r0, r4
 1422              	.LVL223:
 1423 0010 FFF7FEFF 		bl	xQueueTakeMutexRecursive
 1424              	.LVL224:
 1425 0014 0446     		mov	r4, r0
 1426              	.LVL225:
 710:./freertos/Source/portable/Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 1427              		.loc 1 710 0
 1428 0016 2846     		mov	r0, r5
 1429              	.LVL226:
 1430 0018 FFF7FEFF 		bl	vPortResetPrivilege
 1431              	.LVL227:
 711:./freertos/Source/portable/Common/mpu_wrappers.c **** 		return xReturn;
 712:./freertos/Source/portable/Common/mpu_wrappers.c **** 	}
 1432              		.loc 1 712 0
 1433 001c 2046     		mov	r0, r4
 1434 001e 70BD     		pop	{r4, r5, r6, pc}
 1435              		.cfi_endproc
 1436              	.LFE147:
 1438              		.section	.text.MPU_xQueueGiveMutexRecursive,"ax",%progbits
 1439              		.align	2
 1440              		.global	MPU_xQueueGiveMutexRecursive
 1441              		.thumb
 1442              		.thumb_func
 1444              	MPU_xQueueGiveMutexRecursive:
 1445              	.LFB148:
 713:./freertos/Source/portable/Common/mpu_wrappers.c **** #endif
 714:./freertos/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 715:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 716:./freertos/Source/portable/Common/mpu_wrappers.c **** #if ( configUSE_MUTEXES == 1 )
 717:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t MPU_xQueueGiveMutexRecursive( QueueHandle_t xMutex )
 718:./freertos/Source/portable/Common/mpu_wrappers.c **** 	{
 1446              		.loc 1 718 0
 1447              		.cfi_startproc
 1448              		@ args = 0, pretend = 0, frame = 0
 1449              		@ frame_needed = 0, uses_anonymous_args = 0
 1450              	.LVL228:
 1451 0000 38B5     		push	{r3, r4, r5, lr}
 1452              	.LCFI34:
 1453              		.cfi_def_cfa_offset 16
 1454              		.cfi_offset 3, -16
 1455              		.cfi_offset 4, -12
 1456              		.cfi_offset 5, -8
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s 			page 38


 1457              		.cfi_offset 14, -4
 1458 0002 0446     		mov	r4, r0
 719:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t xReturn;
 720:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 1459              		.loc 1 720 0
 1460 0004 FFF7FEFF 		bl	xPortRaisePrivilege
 1461              	.LVL229:
 1462 0008 0546     		mov	r5, r0
 1463              	.LVL230:
 721:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 722:./freertos/Source/portable/Common/mpu_wrappers.c **** 		xReturn = xQueueGiveMutexRecursive( xMutex );
 1464              		.loc 1 722 0
 1465 000a 2046     		mov	r0, r4
 1466              	.LVL231:
 1467 000c FFF7FEFF 		bl	xQueueGiveMutexRecursive
 1468              	.LVL232:
 1469 0010 0446     		mov	r4, r0
 1470              	.LVL233:
 723:./freertos/Source/portable/Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 1471              		.loc 1 723 0
 1472 0012 2846     		mov	r0, r5
 1473              	.LVL234:
 1474 0014 FFF7FEFF 		bl	vPortResetPrivilege
 1475              	.LVL235:
 724:./freertos/Source/portable/Common/mpu_wrappers.c **** 		return xReturn;
 725:./freertos/Source/portable/Common/mpu_wrappers.c **** 	}
 1476              		.loc 1 725 0
 1477 0018 2046     		mov	r0, r4
 1478 001a 38BD     		pop	{r3, r4, r5, pc}
 1479              		.cfi_endproc
 1480              	.LFE148:
 1482              		.section	.text.MPU_vQueueAddToRegistry,"ax",%progbits
 1483              		.align	2
 1484              		.global	MPU_vQueueAddToRegistry
 1485              		.thumb
 1486              		.thumb_func
 1488              	MPU_vQueueAddToRegistry:
 1489              	.LFB149:
 726:./freertos/Source/portable/Common/mpu_wrappers.c **** #endif
 727:./freertos/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 728:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 729:./freertos/Source/portable/Common/mpu_wrappers.c **** #if ( configUSE_QUEUE_SETS == 1 )
 730:./freertos/Source/portable/Common/mpu_wrappers.c **** 	QueueSetHandle_t MPU_xQueueCreateSet( UBaseType_t uxEventQueueLength )
 731:./freertos/Source/portable/Common/mpu_wrappers.c **** 	{
 732:./freertos/Source/portable/Common/mpu_wrappers.c **** 	QueueSetHandle_t xReturn;
 733:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 734:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 735:./freertos/Source/portable/Common/mpu_wrappers.c **** 		xReturn = xQueueCreateSet( uxEventQueueLength );
 736:./freertos/Source/portable/Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 737:./freertos/Source/portable/Common/mpu_wrappers.c **** 		return xReturn;
 738:./freertos/Source/portable/Common/mpu_wrappers.c **** 	}
 739:./freertos/Source/portable/Common/mpu_wrappers.c **** #endif
 740:./freertos/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 741:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 742:./freertos/Source/portable/Common/mpu_wrappers.c **** #if ( configUSE_QUEUE_SETS == 1 )
 743:./freertos/Source/portable/Common/mpu_wrappers.c **** 	QueueSetMemberHandle_t MPU_xQueueSelectFromSet( QueueSetHandle_t xQueueSet, TickType_t xBlockTimeT
 744:./freertos/Source/portable/Common/mpu_wrappers.c **** 	{
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s 			page 39


 745:./freertos/Source/portable/Common/mpu_wrappers.c **** 	QueueSetMemberHandle_t xReturn;
 746:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 747:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 748:./freertos/Source/portable/Common/mpu_wrappers.c **** 		xReturn = xQueueSelectFromSet( xQueueSet, xBlockTimeTicks );
 749:./freertos/Source/portable/Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 750:./freertos/Source/portable/Common/mpu_wrappers.c **** 		return xReturn;
 751:./freertos/Source/portable/Common/mpu_wrappers.c **** 	}
 752:./freertos/Source/portable/Common/mpu_wrappers.c **** #endif
 753:./freertos/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 754:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 755:./freertos/Source/portable/Common/mpu_wrappers.c **** #if ( configUSE_QUEUE_SETS == 1 )
 756:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t MPU_xQueueAddToSet( QueueSetMemberHandle_t xQueueOrSemaphore, QueueSetHandle_t xQueueSe
 757:./freertos/Source/portable/Common/mpu_wrappers.c **** 	{
 758:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t xReturn;
 759:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 760:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 761:./freertos/Source/portable/Common/mpu_wrappers.c **** 		xReturn = xQueueAddToSet( xQueueOrSemaphore, xQueueSet );
 762:./freertos/Source/portable/Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 763:./freertos/Source/portable/Common/mpu_wrappers.c **** 		return xReturn;
 764:./freertos/Source/portable/Common/mpu_wrappers.c **** 	}
 765:./freertos/Source/portable/Common/mpu_wrappers.c **** #endif
 766:./freertos/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 767:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 768:./freertos/Source/portable/Common/mpu_wrappers.c **** #if ( configUSE_QUEUE_SETS == 1 )
 769:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t MPU_xQueueRemoveFromSet( QueueSetMemberHandle_t xQueueOrSemaphore, QueueSetHandle_t xQu
 770:./freertos/Source/portable/Common/mpu_wrappers.c **** 	{
 771:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t xReturn;
 772:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 773:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 774:./freertos/Source/portable/Common/mpu_wrappers.c **** 		xReturn = xQueueRemoveFromSet( xQueueOrSemaphore, xQueueSet );
 775:./freertos/Source/portable/Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 776:./freertos/Source/portable/Common/mpu_wrappers.c **** 		return xReturn;
 777:./freertos/Source/portable/Common/mpu_wrappers.c **** 	}
 778:./freertos/Source/portable/Common/mpu_wrappers.c **** #endif
 779:./freertos/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 780:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 781:./freertos/Source/portable/Common/mpu_wrappers.c **** #if configQUEUE_REGISTRY_SIZE > 0
 782:./freertos/Source/portable/Common/mpu_wrappers.c **** 	void MPU_vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcName )
 783:./freertos/Source/portable/Common/mpu_wrappers.c **** 	{
 1490              		.loc 1 783 0
 1491              		.cfi_startproc
 1492              		@ args = 0, pretend = 0, frame = 0
 1493              		@ frame_needed = 0, uses_anonymous_args = 0
 1494              	.LVL236:
 1495 0000 70B5     		push	{r4, r5, r6, lr}
 1496              	.LCFI35:
 1497              		.cfi_def_cfa_offset 16
 1498              		.cfi_offset 4, -16
 1499              		.cfi_offset 5, -12
 1500              		.cfi_offset 6, -8
 1501              		.cfi_offset 14, -4
 1502 0002 0546     		mov	r5, r0
 1503 0004 0E46     		mov	r6, r1
 784:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 1504              		.loc 1 784 0
 1505 0006 FFF7FEFF 		bl	xPortRaisePrivilege
 1506              	.LVL237:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s 			page 40


 1507 000a 0446     		mov	r4, r0
 1508              	.LVL238:
 785:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 786:./freertos/Source/portable/Common/mpu_wrappers.c **** 		vQueueAddToRegistry( xQueue, pcName );
 1509              		.loc 1 786 0
 1510 000c 3146     		mov	r1, r6
 1511 000e 2846     		mov	r0, r5
 1512              	.LVL239:
 1513 0010 FFF7FEFF 		bl	vQueueAddToRegistry
 1514              	.LVL240:
 787:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 788:./freertos/Source/portable/Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 1515              		.loc 1 788 0
 1516 0014 2046     		mov	r0, r4
 1517 0016 FFF7FEFF 		bl	vPortResetPrivilege
 1518              	.LVL241:
 1519 001a 70BD     		pop	{r4, r5, r6, pc}
 1520              		.cfi_endproc
 1521              	.LFE149:
 1523              		.section	.text.MPU_vQueueUnregisterQueue,"ax",%progbits
 1524              		.align	2
 1525              		.global	MPU_vQueueUnregisterQueue
 1526              		.thumb
 1527              		.thumb_func
 1529              	MPU_vQueueUnregisterQueue:
 1530              	.LFB150:
 789:./freertos/Source/portable/Common/mpu_wrappers.c **** 	}
 790:./freertos/Source/portable/Common/mpu_wrappers.c **** #endif
 791:./freertos/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 792:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 793:./freertos/Source/portable/Common/mpu_wrappers.c **** #if configQUEUE_REGISTRY_SIZE > 0
 794:./freertos/Source/portable/Common/mpu_wrappers.c **** 	void MPU_vQueueUnregisterQueue( QueueHandle_t xQueue )
 795:./freertos/Source/portable/Common/mpu_wrappers.c **** 	{
 1531              		.loc 1 795 0
 1532              		.cfi_startproc
 1533              		@ args = 0, pretend = 0, frame = 0
 1534              		@ frame_needed = 0, uses_anonymous_args = 0
 1535              	.LVL242:
 1536 0000 38B5     		push	{r3, r4, r5, lr}
 1537              	.LCFI36:
 1538              		.cfi_def_cfa_offset 16
 1539              		.cfi_offset 3, -16
 1540              		.cfi_offset 4, -12
 1541              		.cfi_offset 5, -8
 1542              		.cfi_offset 14, -4
 1543 0002 0546     		mov	r5, r0
 796:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 1544              		.loc 1 796 0
 1545 0004 FFF7FEFF 		bl	xPortRaisePrivilege
 1546              	.LVL243:
 1547 0008 0446     		mov	r4, r0
 1548              	.LVL244:
 797:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 798:./freertos/Source/portable/Common/mpu_wrappers.c **** 		vQueueUnregisterQueue( xQueue );
 1549              		.loc 1 798 0
 1550 000a 2846     		mov	r0, r5
 1551              	.LVL245:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s 			page 41


 1552 000c FFF7FEFF 		bl	vQueueUnregisterQueue
 1553              	.LVL246:
 799:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 800:./freertos/Source/portable/Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 1554              		.loc 1 800 0
 1555 0010 2046     		mov	r0, r4
 1556 0012 FFF7FEFF 		bl	vPortResetPrivilege
 1557              	.LVL247:
 1558 0016 38BD     		pop	{r3, r4, r5, pc}
 1559              		.cfi_endproc
 1560              	.LFE150:
 1562              		.section	.text.MPU_pcQueueGetName,"ax",%progbits
 1563              		.align	2
 1564              		.global	MPU_pcQueueGetName
 1565              		.thumb
 1566              		.thumb_func
 1568              	MPU_pcQueueGetName:
 1569              	.LFB151:
 801:./freertos/Source/portable/Common/mpu_wrappers.c **** 	}
 802:./freertos/Source/portable/Common/mpu_wrappers.c **** #endif
 803:./freertos/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 804:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 805:./freertos/Source/portable/Common/mpu_wrappers.c **** #if configQUEUE_REGISTRY_SIZE > 0
 806:./freertos/Source/portable/Common/mpu_wrappers.c **** 	const char *MPU_pcQueueGetName( QueueHandle_t xQueue )
 807:./freertos/Source/portable/Common/mpu_wrappers.c **** 	{
 1570              		.loc 1 807 0
 1571              		.cfi_startproc
 1572              		@ args = 0, pretend = 0, frame = 0
 1573              		@ frame_needed = 0, uses_anonymous_args = 0
 1574              	.LVL248:
 1575 0000 38B5     		push	{r3, r4, r5, lr}
 1576              	.LCFI37:
 1577              		.cfi_def_cfa_offset 16
 1578              		.cfi_offset 3, -16
 1579              		.cfi_offset 4, -12
 1580              		.cfi_offset 5, -8
 1581              		.cfi_offset 14, -4
 1582 0002 0446     		mov	r4, r0
 808:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 1583              		.loc 1 808 0
 1584 0004 FFF7FEFF 		bl	xPortRaisePrivilege
 1585              	.LVL249:
 1586 0008 0546     		mov	r5, r0
 1587              	.LVL250:
 809:./freertos/Source/portable/Common/mpu_wrappers.c **** 	const char *pcReturn;
 810:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 811:./freertos/Source/portable/Common/mpu_wrappers.c **** 		pcReturn = pcQueueGetName( xQueue );
 1588              		.loc 1 811 0
 1589 000a 2046     		mov	r0, r4
 1590              	.LVL251:
 1591 000c FFF7FEFF 		bl	pcQueueGetName
 1592              	.LVL252:
 1593 0010 0446     		mov	r4, r0
 1594              	.LVL253:
 812:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 813:./freertos/Source/portable/Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 1595              		.loc 1 813 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s 			page 42


 1596 0012 2846     		mov	r0, r5
 1597              	.LVL254:
 1598 0014 FFF7FEFF 		bl	vPortResetPrivilege
 1599              	.LVL255:
 814:./freertos/Source/portable/Common/mpu_wrappers.c **** 		return pcReturn;
 815:./freertos/Source/portable/Common/mpu_wrappers.c **** 	}
 1600              		.loc 1 815 0
 1601 0018 2046     		mov	r0, r4
 1602 001a 38BD     		pop	{r3, r4, r5, pc}
 1603              		.cfi_endproc
 1604              	.LFE151:
 1606              		.section	.text.MPU_vQueueDelete,"ax",%progbits
 1607              		.align	2
 1608              		.global	MPU_vQueueDelete
 1609              		.thumb
 1610              		.thumb_func
 1612              	MPU_vQueueDelete:
 1613              	.LFB152:
 816:./freertos/Source/portable/Common/mpu_wrappers.c **** #endif
 817:./freertos/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 818:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 819:./freertos/Source/portable/Common/mpu_wrappers.c **** void MPU_vQueueDelete( QueueHandle_t xQueue )
 820:./freertos/Source/portable/Common/mpu_wrappers.c **** {
 1614              		.loc 1 820 0
 1615              		.cfi_startproc
 1616              		@ args = 0, pretend = 0, frame = 0
 1617              		@ frame_needed = 0, uses_anonymous_args = 0
 1618              	.LVL256:
 1619 0000 38B5     		push	{r3, r4, r5, lr}
 1620              	.LCFI38:
 1621              		.cfi_def_cfa_offset 16
 1622              		.cfi_offset 3, -16
 1623              		.cfi_offset 4, -12
 1624              		.cfi_offset 5, -8
 1625              		.cfi_offset 14, -4
 1626 0002 0546     		mov	r5, r0
 821:./freertos/Source/portable/Common/mpu_wrappers.c **** BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 1627              		.loc 1 821 0
 1628 0004 FFF7FEFF 		bl	xPortRaisePrivilege
 1629              	.LVL257:
 1630 0008 0446     		mov	r4, r0
 1631              	.LVL258:
 822:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 823:./freertos/Source/portable/Common/mpu_wrappers.c **** 	vQueueDelete( xQueue );
 1632              		.loc 1 823 0
 1633 000a 2846     		mov	r0, r5
 1634              	.LVL259:
 1635 000c FFF7FEFF 		bl	vQueueDelete
 1636              	.LVL260:
 824:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 825:./freertos/Source/portable/Common/mpu_wrappers.c **** 	vPortResetPrivilege( xRunningPrivileged );
 1637              		.loc 1 825 0
 1638 0010 2046     		mov	r0, r4
 1639 0012 FFF7FEFF 		bl	vPortResetPrivilege
 1640              	.LVL261:
 1641 0016 38BD     		pop	{r3, r4, r5, pc}
 1642              		.cfi_endproc
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s 			page 43


 1643              	.LFE152:
 1645              		.section	.text.MPU_pvPortMalloc,"ax",%progbits
 1646              		.align	2
 1647              		.global	MPU_pvPortMalloc
 1648              		.thumb
 1649              		.thumb_func
 1651              	MPU_pvPortMalloc:
 1652              	.LFB153:
 826:./freertos/Source/portable/Common/mpu_wrappers.c **** }
 827:./freertos/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 828:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 829:./freertos/Source/portable/Common/mpu_wrappers.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 830:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 831:./freertos/Source/portable/Common/mpu_wrappers.c **** 	void *MPU_pvPortMalloc( size_t xSize )
 832:./freertos/Source/portable/Common/mpu_wrappers.c **** 	{
 1653              		.loc 1 832 0
 1654              		.cfi_startproc
 1655              		@ args = 0, pretend = 0, frame = 0
 1656              		@ frame_needed = 0, uses_anonymous_args = 0
 1657              	.LVL262:
 1658 0000 38B5     		push	{r3, r4, r5, lr}
 1659              	.LCFI39:
 1660              		.cfi_def_cfa_offset 16
 1661              		.cfi_offset 3, -16
 1662              		.cfi_offset 4, -12
 1663              		.cfi_offset 5, -8
 1664              		.cfi_offset 14, -4
 1665 0002 0446     		mov	r4, r0
 833:./freertos/Source/portable/Common/mpu_wrappers.c **** 	void *pvReturn;
 834:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 1666              		.loc 1 834 0
 1667 0004 FFF7FEFF 		bl	xPortRaisePrivilege
 1668              	.LVL263:
 1669 0008 0546     		mov	r5, r0
 1670              	.LVL264:
 835:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 836:./freertos/Source/portable/Common/mpu_wrappers.c **** 		pvReturn = pvPortMalloc( xSize );
 1671              		.loc 1 836 0
 1672 000a 2046     		mov	r0, r4
 1673              	.LVL265:
 1674 000c FFF7FEFF 		bl	pvPortMalloc
 1675              	.LVL266:
 1676 0010 0446     		mov	r4, r0
 1677              	.LVL267:
 837:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 838:./freertos/Source/portable/Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 1678              		.loc 1 838 0
 1679 0012 2846     		mov	r0, r5
 1680              	.LVL268:
 1681 0014 FFF7FEFF 		bl	vPortResetPrivilege
 1682              	.LVL269:
 839:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 840:./freertos/Source/portable/Common/mpu_wrappers.c **** 		return pvReturn;
 841:./freertos/Source/portable/Common/mpu_wrappers.c **** 	}
 1683              		.loc 1 841 0
 1684 0018 2046     		mov	r0, r4
 1685 001a 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s 			page 44


 1686              		.cfi_endproc
 1687              	.LFE153:
 1689              		.section	.text.MPU_vPortFree,"ax",%progbits
 1690              		.align	2
 1691              		.global	MPU_vPortFree
 1692              		.thumb
 1693              		.thumb_func
 1695              	MPU_vPortFree:
 1696              	.LFB154:
 842:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 843:./freertos/Source/portable/Common/mpu_wrappers.c **** #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 844:./freertos/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 845:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 846:./freertos/Source/portable/Common/mpu_wrappers.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 847:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 848:./freertos/Source/portable/Common/mpu_wrappers.c **** 	void MPU_vPortFree( void *pv )
 849:./freertos/Source/portable/Common/mpu_wrappers.c **** 	{
 1697              		.loc 1 849 0
 1698              		.cfi_startproc
 1699              		@ args = 0, pretend = 0, frame = 0
 1700              		@ frame_needed = 0, uses_anonymous_args = 0
 1701              	.LVL270:
 1702 0000 38B5     		push	{r3, r4, r5, lr}
 1703              	.LCFI40:
 1704              		.cfi_def_cfa_offset 16
 1705              		.cfi_offset 3, -16
 1706              		.cfi_offset 4, -12
 1707              		.cfi_offset 5, -8
 1708              		.cfi_offset 14, -4
 1709 0002 0546     		mov	r5, r0
 850:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 1710              		.loc 1 850 0
 1711 0004 FFF7FEFF 		bl	xPortRaisePrivilege
 1712              	.LVL271:
 1713 0008 0446     		mov	r4, r0
 1714              	.LVL272:
 851:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 852:./freertos/Source/portable/Common/mpu_wrappers.c **** 		vPortFree( pv );
 1715              		.loc 1 852 0
 1716 000a 2846     		mov	r0, r5
 1717              	.LVL273:
 1718 000c FFF7FEFF 		bl	vPortFree
 1719              	.LVL274:
 853:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 854:./freertos/Source/portable/Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 1720              		.loc 1 854 0
 1721 0010 2046     		mov	r0, r4
 1722 0012 FFF7FEFF 		bl	vPortResetPrivilege
 1723              	.LVL275:
 1724 0016 38BD     		pop	{r3, r4, r5, pc}
 1725              		.cfi_endproc
 1726              	.LFE154:
 1728              		.section	.text.MPU_vPortInitialiseBlocks,"ax",%progbits
 1729              		.align	2
 1730              		.global	MPU_vPortInitialiseBlocks
 1731              		.thumb
 1732              		.thumb_func
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s 			page 45


 1734              	MPU_vPortInitialiseBlocks:
 1735              	.LFB155:
 855:./freertos/Source/portable/Common/mpu_wrappers.c **** 	}
 856:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 857:./freertos/Source/portable/Common/mpu_wrappers.c **** #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 858:./freertos/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 859:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 860:./freertos/Source/portable/Common/mpu_wrappers.c **** void MPU_vPortInitialiseBlocks( void )
 861:./freertos/Source/portable/Common/mpu_wrappers.c **** {
 1736              		.loc 1 861 0
 1737              		.cfi_startproc
 1738              		@ args = 0, pretend = 0, frame = 0
 1739              		@ frame_needed = 0, uses_anonymous_args = 0
 1740 0000 10B5     		push	{r4, lr}
 1741              	.LCFI41:
 1742              		.cfi_def_cfa_offset 8
 1743              		.cfi_offset 4, -8
 1744              		.cfi_offset 14, -4
 862:./freertos/Source/portable/Common/mpu_wrappers.c **** BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 1745              		.loc 1 862 0
 1746 0002 FFF7FEFF 		bl	xPortRaisePrivilege
 1747              	.LVL276:
 1748 0006 0446     		mov	r4, r0
 1749              	.LVL277:
 863:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 864:./freertos/Source/portable/Common/mpu_wrappers.c **** 	vPortInitialiseBlocks();
 1750              		.loc 1 864 0
 1751 0008 FFF7FEFF 		bl	vPortInitialiseBlocks
 1752              	.LVL278:
 865:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 866:./freertos/Source/portable/Common/mpu_wrappers.c **** 	vPortResetPrivilege( xRunningPrivileged );
 1753              		.loc 1 866 0
 1754 000c 2046     		mov	r0, r4
 1755 000e FFF7FEFF 		bl	vPortResetPrivilege
 1756              	.LVL279:
 1757 0012 10BD     		pop	{r4, pc}
 1758              		.cfi_endproc
 1759              	.LFE155:
 1761              		.section	.text.MPU_xPortGetFreeHeapSize,"ax",%progbits
 1762              		.align	2
 1763              		.global	MPU_xPortGetFreeHeapSize
 1764              		.thumb
 1765              		.thumb_func
 1767              	MPU_xPortGetFreeHeapSize:
 1768              	.LFB156:
 867:./freertos/Source/portable/Common/mpu_wrappers.c **** }
 868:./freertos/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 869:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 870:./freertos/Source/portable/Common/mpu_wrappers.c **** size_t MPU_xPortGetFreeHeapSize( void )
 871:./freertos/Source/portable/Common/mpu_wrappers.c **** {
 1769              		.loc 1 871 0
 1770              		.cfi_startproc
 1771              		@ args = 0, pretend = 0, frame = 0
 1772              		@ frame_needed = 0, uses_anonymous_args = 0
 1773 0000 38B5     		push	{r3, r4, r5, lr}
 1774              	.LCFI42:
 1775              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s 			page 46


 1776              		.cfi_offset 3, -16
 1777              		.cfi_offset 4, -12
 1778              		.cfi_offset 5, -8
 1779              		.cfi_offset 14, -4
 872:./freertos/Source/portable/Common/mpu_wrappers.c **** size_t xReturn;
 873:./freertos/Source/portable/Common/mpu_wrappers.c **** BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 1780              		.loc 1 873 0
 1781 0002 FFF7FEFF 		bl	xPortRaisePrivilege
 1782              	.LVL280:
 1783 0006 0546     		mov	r5, r0
 1784              	.LVL281:
 874:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 875:./freertos/Source/portable/Common/mpu_wrappers.c **** 	xReturn = xPortGetFreeHeapSize();
 1785              		.loc 1 875 0
 1786 0008 FFF7FEFF 		bl	xPortGetFreeHeapSize
 1787              	.LVL282:
 1788 000c 0446     		mov	r4, r0
 1789              	.LVL283:
 876:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 877:./freertos/Source/portable/Common/mpu_wrappers.c **** 	vPortResetPrivilege( xRunningPrivileged );
 1790              		.loc 1 877 0
 1791 000e 2846     		mov	r0, r5
 1792              	.LVL284:
 1793 0010 FFF7FEFF 		bl	vPortResetPrivilege
 1794              	.LVL285:
 878:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 879:./freertos/Source/portable/Common/mpu_wrappers.c **** 	return xReturn;
 880:./freertos/Source/portable/Common/mpu_wrappers.c **** }
 1795              		.loc 1 880 0
 1796 0014 2046     		mov	r0, r4
 1797 0016 38BD     		pop	{r3, r4, r5, pc}
 1798              		.cfi_endproc
 1799              	.LFE156:
 1801              		.section	.text.MPU_xEventGroupCreate,"ax",%progbits
 1802              		.align	2
 1803              		.global	MPU_xEventGroupCreate
 1804              		.thumb
 1805              		.thumb_func
 1807              	MPU_xEventGroupCreate:
 1808              	.LFB157:
 881:./freertos/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 882:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 883:./freertos/Source/portable/Common/mpu_wrappers.c **** #if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configUSE_TIMERS == 1 ) )
 884:./freertos/Source/portable/Common/mpu_wrappers.c **** 	TimerHandle_t MPU_xTimerCreate( const char * const pcTimerName, const TickType_t xTimerPeriodInTic
 885:./freertos/Source/portable/Common/mpu_wrappers.c **** 	{
 886:./freertos/Source/portable/Common/mpu_wrappers.c **** 	TimerHandle_t xReturn;
 887:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 888:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 889:./freertos/Source/portable/Common/mpu_wrappers.c **** 		xReturn = xTimerCreate( pcTimerName, xTimerPeriodInTicks, uxAutoReload, pvTimerID, pxCallbackFunc
 890:./freertos/Source/portable/Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 891:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 892:./freertos/Source/portable/Common/mpu_wrappers.c **** 		return xReturn;
 893:./freertos/Source/portable/Common/mpu_wrappers.c **** 	}
 894:./freertos/Source/portable/Common/mpu_wrappers.c **** #endif
 895:./freertos/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 896:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 897:./freertos/Source/portable/Common/mpu_wrappers.c **** #if( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( configUSE_TIMERS == 1 ) )
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s 			page 47


 898:./freertos/Source/portable/Common/mpu_wrappers.c **** 	TimerHandle_t MPU_xTimerCreateStatic( const char * const pcTimerName, const TickType_t xTimerPerio
 899:./freertos/Source/portable/Common/mpu_wrappers.c **** 	{
 900:./freertos/Source/portable/Common/mpu_wrappers.c **** 	TimerHandle_t xReturn;
 901:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 902:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 903:./freertos/Source/portable/Common/mpu_wrappers.c **** 		xReturn = xTimerCreateStatic( pcTimerName, xTimerPeriodInTicks, uxAutoReload, pvTimerID, pxCallba
 904:./freertos/Source/portable/Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 905:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 906:./freertos/Source/portable/Common/mpu_wrappers.c **** 		return xReturn;
 907:./freertos/Source/portable/Common/mpu_wrappers.c **** 	}
 908:./freertos/Source/portable/Common/mpu_wrappers.c **** #endif
 909:./freertos/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 910:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 911:./freertos/Source/portable/Common/mpu_wrappers.c **** #if( configUSE_TIMERS == 1 )
 912:./freertos/Source/portable/Common/mpu_wrappers.c **** 	void *MPU_pvTimerGetTimerID( const TimerHandle_t xTimer )
 913:./freertos/Source/portable/Common/mpu_wrappers.c **** 	{
 914:./freertos/Source/portable/Common/mpu_wrappers.c **** 	void * pvReturn;
 915:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 916:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 917:./freertos/Source/portable/Common/mpu_wrappers.c **** 		pvReturn = pvTimerGetTimerID( xTimer );
 918:./freertos/Source/portable/Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 919:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 920:./freertos/Source/portable/Common/mpu_wrappers.c **** 		return pvReturn;
 921:./freertos/Source/portable/Common/mpu_wrappers.c **** 	}
 922:./freertos/Source/portable/Common/mpu_wrappers.c **** #endif
 923:./freertos/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 924:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 925:./freertos/Source/portable/Common/mpu_wrappers.c **** #if( configUSE_TIMERS == 1 )
 926:./freertos/Source/portable/Common/mpu_wrappers.c **** 	void MPU_vTimerSetTimerID( TimerHandle_t xTimer, void *pvNewID )
 927:./freertos/Source/portable/Common/mpu_wrappers.c **** 	{
 928:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 929:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 930:./freertos/Source/portable/Common/mpu_wrappers.c **** 		vTimerSetTimerID( xTimer, pvNewID );
 931:./freertos/Source/portable/Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 932:./freertos/Source/portable/Common/mpu_wrappers.c **** 	}
 933:./freertos/Source/portable/Common/mpu_wrappers.c **** #endif
 934:./freertos/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 935:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 936:./freertos/Source/portable/Common/mpu_wrappers.c **** #if( configUSE_TIMERS == 1 )
 937:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t MPU_xTimerIsTimerActive( TimerHandle_t xTimer )
 938:./freertos/Source/portable/Common/mpu_wrappers.c **** 	{
 939:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t xReturn;
 940:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 941:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 942:./freertos/Source/portable/Common/mpu_wrappers.c **** 		xReturn = xTimerIsTimerActive( xTimer );
 943:./freertos/Source/portable/Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 944:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 945:./freertos/Source/portable/Common/mpu_wrappers.c **** 		return xReturn;
 946:./freertos/Source/portable/Common/mpu_wrappers.c **** 	}
 947:./freertos/Source/portable/Common/mpu_wrappers.c **** #endif
 948:./freertos/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 949:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 950:./freertos/Source/portable/Common/mpu_wrappers.c **** #if( configUSE_TIMERS == 1 )
 951:./freertos/Source/portable/Common/mpu_wrappers.c **** 	TaskHandle_t MPU_xTimerGetTimerDaemonTaskHandle( void )
 952:./freertos/Source/portable/Common/mpu_wrappers.c **** 	{
 953:./freertos/Source/portable/Common/mpu_wrappers.c **** 	TaskHandle_t xReturn;
 954:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s 			page 48


 955:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 956:./freertos/Source/portable/Common/mpu_wrappers.c **** 		xReturn = xTimerGetTimerDaemonTaskHandle();
 957:./freertos/Source/portable/Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 958:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 959:./freertos/Source/portable/Common/mpu_wrappers.c **** 		return xReturn;
 960:./freertos/Source/portable/Common/mpu_wrappers.c **** 	}
 961:./freertos/Source/portable/Common/mpu_wrappers.c **** #endif
 962:./freertos/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 963:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 964:./freertos/Source/portable/Common/mpu_wrappers.c **** #if( ( INCLUDE_xTimerPendFunctionCall == 1 ) && ( configUSE_TIMERS == 1 ) )
 965:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t MPU_xTimerPendFunctionCall( PendedFunction_t xFunctionToPend, void *pvParameter1, uint3
 966:./freertos/Source/portable/Common/mpu_wrappers.c **** 	{
 967:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t xReturn;
 968:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 969:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 970:./freertos/Source/portable/Common/mpu_wrappers.c **** 		xReturn = xTimerPendFunctionCall( xFunctionToPend, pvParameter1, ulParameter2, xTicksToWait );
 971:./freertos/Source/portable/Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 972:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 973:./freertos/Source/portable/Common/mpu_wrappers.c **** 		return xReturn;
 974:./freertos/Source/portable/Common/mpu_wrappers.c **** 	}
 975:./freertos/Source/portable/Common/mpu_wrappers.c **** #endif
 976:./freertos/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 977:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 978:./freertos/Source/portable/Common/mpu_wrappers.c **** #if( configUSE_TIMERS == 1 )
 979:./freertos/Source/portable/Common/mpu_wrappers.c **** 	const char * MPU_pcTimerGetName( TimerHandle_t xTimer )
 980:./freertos/Source/portable/Common/mpu_wrappers.c **** 	{
 981:./freertos/Source/portable/Common/mpu_wrappers.c **** 	const char * pcReturn;
 982:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 983:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 984:./freertos/Source/portable/Common/mpu_wrappers.c **** 		pcReturn = pcTimerGetName( xTimer );
 985:./freertos/Source/portable/Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 986:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 987:./freertos/Source/portable/Common/mpu_wrappers.c **** 		return pcReturn;
 988:./freertos/Source/portable/Common/mpu_wrappers.c **** 	}
 989:./freertos/Source/portable/Common/mpu_wrappers.c **** #endif
 990:./freertos/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
 991:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 992:./freertos/Source/portable/Common/mpu_wrappers.c **** #if( configUSE_TIMERS == 1 )
 993:./freertos/Source/portable/Common/mpu_wrappers.c **** 	TickType_t MPU_xTimerGetPeriod( TimerHandle_t xTimer )
 994:./freertos/Source/portable/Common/mpu_wrappers.c **** 	{
 995:./freertos/Source/portable/Common/mpu_wrappers.c **** 	TickType_t xReturn;
 996:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 997:./freertos/Source/portable/Common/mpu_wrappers.c **** 
 998:./freertos/Source/portable/Common/mpu_wrappers.c **** 		xReturn = xTimerGetPeriod( xTimer );
 999:./freertos/Source/portable/Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
1000:./freertos/Source/portable/Common/mpu_wrappers.c **** 
1001:./freertos/Source/portable/Common/mpu_wrappers.c **** 		return xReturn;
1002:./freertos/Source/portable/Common/mpu_wrappers.c **** 	}
1003:./freertos/Source/portable/Common/mpu_wrappers.c **** #endif
1004:./freertos/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
1005:./freertos/Source/portable/Common/mpu_wrappers.c **** 
1006:./freertos/Source/portable/Common/mpu_wrappers.c **** #if( configUSE_TIMERS == 1 )
1007:./freertos/Source/portable/Common/mpu_wrappers.c **** 	TickType_t MPU_xTimerGetExpiryTime( TimerHandle_t xTimer )
1008:./freertos/Source/portable/Common/mpu_wrappers.c **** 	{
1009:./freertos/Source/portable/Common/mpu_wrappers.c **** 	TickType_t xReturn;
1010:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
1011:./freertos/Source/portable/Common/mpu_wrappers.c **** 
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s 			page 49


1012:./freertos/Source/portable/Common/mpu_wrappers.c **** 		xReturn = xTimerGetExpiryTime( xTimer );
1013:./freertos/Source/portable/Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
1014:./freertos/Source/portable/Common/mpu_wrappers.c **** 
1015:./freertos/Source/portable/Common/mpu_wrappers.c **** 		return xReturn;
1016:./freertos/Source/portable/Common/mpu_wrappers.c **** 	}
1017:./freertos/Source/portable/Common/mpu_wrappers.c **** #endif
1018:./freertos/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
1019:./freertos/Source/portable/Common/mpu_wrappers.c **** 
1020:./freertos/Source/portable/Common/mpu_wrappers.c **** #if( configUSE_TIMERS == 1 )
1021:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t MPU_xTimerGenericCommand( TimerHandle_t xTimer, const BaseType_t xCommandID, const Tick
1022:./freertos/Source/portable/Common/mpu_wrappers.c **** 	{
1023:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t xReturn;
1024:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
1025:./freertos/Source/portable/Common/mpu_wrappers.c **** 
1026:./freertos/Source/portable/Common/mpu_wrappers.c **** 		xReturn = xTimerGenericCommand( xTimer, xCommandID, xOptionalValue, pxHigherPriorityTaskWoken, xT
1027:./freertos/Source/portable/Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
1028:./freertos/Source/portable/Common/mpu_wrappers.c **** 
1029:./freertos/Source/portable/Common/mpu_wrappers.c **** 		return xReturn;
1030:./freertos/Source/portable/Common/mpu_wrappers.c **** 	}
1031:./freertos/Source/portable/Common/mpu_wrappers.c **** #endif
1032:./freertos/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
1033:./freertos/Source/portable/Common/mpu_wrappers.c **** 
1034:./freertos/Source/portable/Common/mpu_wrappers.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
1035:./freertos/Source/portable/Common/mpu_wrappers.c **** 	EventGroupHandle_t MPU_xEventGroupCreate( void )
1036:./freertos/Source/portable/Common/mpu_wrappers.c **** 	{
 1809              		.loc 1 1036 0
 1810              		.cfi_startproc
 1811              		@ args = 0, pretend = 0, frame = 0
 1812              		@ frame_needed = 0, uses_anonymous_args = 0
 1813 0000 38B5     		push	{r3, r4, r5, lr}
 1814              	.LCFI43:
 1815              		.cfi_def_cfa_offset 16
 1816              		.cfi_offset 3, -16
 1817              		.cfi_offset 4, -12
 1818              		.cfi_offset 5, -8
 1819              		.cfi_offset 14, -4
1037:./freertos/Source/portable/Common/mpu_wrappers.c **** 	EventGroupHandle_t xReturn;
1038:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 1820              		.loc 1 1038 0
 1821 0002 FFF7FEFF 		bl	xPortRaisePrivilege
 1822              	.LVL286:
 1823 0006 0546     		mov	r5, r0
 1824              	.LVL287:
1039:./freertos/Source/portable/Common/mpu_wrappers.c **** 
1040:./freertos/Source/portable/Common/mpu_wrappers.c **** 		xReturn = xEventGroupCreate();
 1825              		.loc 1 1040 0
 1826 0008 FFF7FEFF 		bl	xEventGroupCreate
 1827              	.LVL288:
 1828 000c 0446     		mov	r4, r0
 1829              	.LVL289:
1041:./freertos/Source/portable/Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
 1830              		.loc 1 1041 0
 1831 000e 2846     		mov	r0, r5
 1832              	.LVL290:
 1833 0010 FFF7FEFF 		bl	vPortResetPrivilege
 1834              	.LVL291:
1042:./freertos/Source/portable/Common/mpu_wrappers.c **** 
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s 			page 50


1043:./freertos/Source/portable/Common/mpu_wrappers.c **** 		return xReturn;
1044:./freertos/Source/portable/Common/mpu_wrappers.c **** 	}
 1835              		.loc 1 1044 0
 1836 0014 2046     		mov	r0, r4
 1837 0016 38BD     		pop	{r3, r4, r5, pc}
 1838              		.cfi_endproc
 1839              	.LFE157:
 1841              		.section	.text.MPU_xEventGroupWaitBits,"ax",%progbits
 1842              		.align	2
 1843              		.global	MPU_xEventGroupWaitBits
 1844              		.thumb
 1845              		.thumb_func
 1847              	MPU_xEventGroupWaitBits:
 1848              	.LFB158:
1045:./freertos/Source/portable/Common/mpu_wrappers.c **** #endif
1046:./freertos/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
1047:./freertos/Source/portable/Common/mpu_wrappers.c **** 
1048:./freertos/Source/portable/Common/mpu_wrappers.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
1049:./freertos/Source/portable/Common/mpu_wrappers.c **** 	EventGroupHandle_t MPU_xEventGroupCreateStatic( StaticEventGroup_t *pxEventGroupBuffer )
1050:./freertos/Source/portable/Common/mpu_wrappers.c **** 	{
1051:./freertos/Source/portable/Common/mpu_wrappers.c **** 	EventGroupHandle_t xReturn;
1052:./freertos/Source/portable/Common/mpu_wrappers.c **** 	BaseType_t xRunningPrivileged = xPortRaisePrivilege();
1053:./freertos/Source/portable/Common/mpu_wrappers.c **** 
1054:./freertos/Source/portable/Common/mpu_wrappers.c **** 		xReturn = xEventGroupCreateStatic( pxEventGroupBuffer );
1055:./freertos/Source/portable/Common/mpu_wrappers.c **** 		vPortResetPrivilege( xRunningPrivileged );
1056:./freertos/Source/portable/Common/mpu_wrappers.c **** 
1057:./freertos/Source/portable/Common/mpu_wrappers.c **** 		return xReturn;
1058:./freertos/Source/portable/Common/mpu_wrappers.c **** 	}
1059:./freertos/Source/portable/Common/mpu_wrappers.c **** #endif
1060:./freertos/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
1061:./freertos/Source/portable/Common/mpu_wrappers.c **** 
1062:./freertos/Source/portable/Common/mpu_wrappers.c **** EventBits_t MPU_xEventGroupWaitBits( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToWait
1063:./freertos/Source/portable/Common/mpu_wrappers.c **** {
 1849              		.loc 1 1063 0
 1850              		.cfi_startproc
 1851              		@ args = 4, pretend = 0, frame = 0
 1852              		@ frame_needed = 0, uses_anonymous_args = 0
 1853              	.LVL292:
 1854 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1855              	.LCFI44:
 1856              		.cfi_def_cfa_offset 24
 1857              		.cfi_offset 4, -24
 1858              		.cfi_offset 5, -20
 1859              		.cfi_offset 6, -16
 1860              		.cfi_offset 7, -12
 1861              		.cfi_offset 8, -8
 1862              		.cfi_offset 14, -4
 1863 0004 82B0     		sub	sp, sp, #8
 1864              	.LCFI45:
 1865              		.cfi_def_cfa_offset 32
 1866 0006 0446     		mov	r4, r0
 1867 0008 0E46     		mov	r6, r1
 1868 000a 1746     		mov	r7, r2
 1869 000c 9846     		mov	r8, r3
1064:./freertos/Source/portable/Common/mpu_wrappers.c **** EventBits_t xReturn;
1065:./freertos/Source/portable/Common/mpu_wrappers.c **** BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 1870              		.loc 1 1065 0
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s 			page 51


 1871 000e FFF7FEFF 		bl	xPortRaisePrivilege
 1872              	.LVL293:
 1873 0012 0546     		mov	r5, r0
 1874              	.LVL294:
1066:./freertos/Source/portable/Common/mpu_wrappers.c **** 
1067:./freertos/Source/portable/Common/mpu_wrappers.c **** 	xReturn = xEventGroupWaitBits( xEventGroup, uxBitsToWaitFor, xClearOnExit, xWaitForAllBits, xTicks
 1875              		.loc 1 1067 0
 1876 0014 089B     		ldr	r3, [sp, #32]
 1877 0016 0093     		str	r3, [sp]
 1878 0018 4346     		mov	r3, r8
 1879 001a 3A46     		mov	r2, r7
 1880 001c 3146     		mov	r1, r6
 1881 001e 2046     		mov	r0, r4
 1882              	.LVL295:
 1883 0020 FFF7FEFF 		bl	xEventGroupWaitBits
 1884              	.LVL296:
 1885 0024 0446     		mov	r4, r0
 1886              	.LVL297:
1068:./freertos/Source/portable/Common/mpu_wrappers.c **** 	vPortResetPrivilege( xRunningPrivileged );
 1887              		.loc 1 1068 0
 1888 0026 2846     		mov	r0, r5
 1889              	.LVL298:
 1890 0028 FFF7FEFF 		bl	vPortResetPrivilege
 1891              	.LVL299:
1069:./freertos/Source/portable/Common/mpu_wrappers.c **** 
1070:./freertos/Source/portable/Common/mpu_wrappers.c **** 	return xReturn;
1071:./freertos/Source/portable/Common/mpu_wrappers.c **** }
 1892              		.loc 1 1071 0
 1893 002c 2046     		mov	r0, r4
 1894 002e 02B0     		add	sp, sp, #8
 1895              	.LCFI46:
 1896              		.cfi_def_cfa_offset 24
 1897              		@ sp needed
 1898 0030 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1899              		.cfi_endproc
 1900              	.LFE158:
 1902              		.section	.text.MPU_xEventGroupClearBits,"ax",%progbits
 1903              		.align	2
 1904              		.global	MPU_xEventGroupClearBits
 1905              		.thumb
 1906              		.thumb_func
 1908              	MPU_xEventGroupClearBits:
 1909              	.LFB159:
1072:./freertos/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
1073:./freertos/Source/portable/Common/mpu_wrappers.c **** 
1074:./freertos/Source/portable/Common/mpu_wrappers.c **** EventBits_t MPU_xEventGroupClearBits( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToCle
1075:./freertos/Source/portable/Common/mpu_wrappers.c **** {
 1910              		.loc 1 1075 0
 1911              		.cfi_startproc
 1912              		@ args = 0, pretend = 0, frame = 0
 1913              		@ frame_needed = 0, uses_anonymous_args = 0
 1914              	.LVL300:
 1915 0000 70B5     		push	{r4, r5, r6, lr}
 1916              	.LCFI47:
 1917              		.cfi_def_cfa_offset 16
 1918              		.cfi_offset 4, -16
 1919              		.cfi_offset 5, -12
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s 			page 52


 1920              		.cfi_offset 6, -8
 1921              		.cfi_offset 14, -4
 1922 0002 0446     		mov	r4, r0
 1923 0004 0E46     		mov	r6, r1
1076:./freertos/Source/portable/Common/mpu_wrappers.c **** EventBits_t xReturn;
1077:./freertos/Source/portable/Common/mpu_wrappers.c **** BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 1924              		.loc 1 1077 0
 1925 0006 FFF7FEFF 		bl	xPortRaisePrivilege
 1926              	.LVL301:
 1927 000a 0546     		mov	r5, r0
 1928              	.LVL302:
1078:./freertos/Source/portable/Common/mpu_wrappers.c **** 
1079:./freertos/Source/portable/Common/mpu_wrappers.c **** 	xReturn = xEventGroupClearBits( xEventGroup, uxBitsToClear );
 1929              		.loc 1 1079 0
 1930 000c 3146     		mov	r1, r6
 1931 000e 2046     		mov	r0, r4
 1932              	.LVL303:
 1933 0010 FFF7FEFF 		bl	xEventGroupClearBits
 1934              	.LVL304:
 1935 0014 0446     		mov	r4, r0
 1936              	.LVL305:
1080:./freertos/Source/portable/Common/mpu_wrappers.c **** 	vPortResetPrivilege( xRunningPrivileged );
 1937              		.loc 1 1080 0
 1938 0016 2846     		mov	r0, r5
 1939              	.LVL306:
 1940 0018 FFF7FEFF 		bl	vPortResetPrivilege
 1941              	.LVL307:
1081:./freertos/Source/portable/Common/mpu_wrappers.c **** 
1082:./freertos/Source/portable/Common/mpu_wrappers.c **** 	return xReturn;
1083:./freertos/Source/portable/Common/mpu_wrappers.c **** }
 1942              		.loc 1 1083 0
 1943 001c 2046     		mov	r0, r4
 1944 001e 70BD     		pop	{r4, r5, r6, pc}
 1945              		.cfi_endproc
 1946              	.LFE159:
 1948              		.section	.text.MPU_xEventGroupSetBits,"ax",%progbits
 1949              		.align	2
 1950              		.global	MPU_xEventGroupSetBits
 1951              		.thumb
 1952              		.thumb_func
 1954              	MPU_xEventGroupSetBits:
 1955              	.LFB160:
1084:./freertos/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
1085:./freertos/Source/portable/Common/mpu_wrappers.c **** 
1086:./freertos/Source/portable/Common/mpu_wrappers.c **** EventBits_t MPU_xEventGroupSetBits( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToSet )
1087:./freertos/Source/portable/Common/mpu_wrappers.c **** {
 1956              		.loc 1 1087 0
 1957              		.cfi_startproc
 1958              		@ args = 0, pretend = 0, frame = 0
 1959              		@ frame_needed = 0, uses_anonymous_args = 0
 1960              	.LVL308:
 1961 0000 70B5     		push	{r4, r5, r6, lr}
 1962              	.LCFI48:
 1963              		.cfi_def_cfa_offset 16
 1964              		.cfi_offset 4, -16
 1965              		.cfi_offset 5, -12
 1966              		.cfi_offset 6, -8
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s 			page 53


 1967              		.cfi_offset 14, -4
 1968 0002 0446     		mov	r4, r0
 1969 0004 0E46     		mov	r6, r1
1088:./freertos/Source/portable/Common/mpu_wrappers.c **** EventBits_t xReturn;
1089:./freertos/Source/portable/Common/mpu_wrappers.c **** BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 1970              		.loc 1 1089 0
 1971 0006 FFF7FEFF 		bl	xPortRaisePrivilege
 1972              	.LVL309:
 1973 000a 0546     		mov	r5, r0
 1974              	.LVL310:
1090:./freertos/Source/portable/Common/mpu_wrappers.c **** 
1091:./freertos/Source/portable/Common/mpu_wrappers.c **** 	xReturn = xEventGroupSetBits( xEventGroup, uxBitsToSet );
 1975              		.loc 1 1091 0
 1976 000c 3146     		mov	r1, r6
 1977 000e 2046     		mov	r0, r4
 1978              	.LVL311:
 1979 0010 FFF7FEFF 		bl	xEventGroupSetBits
 1980              	.LVL312:
 1981 0014 0446     		mov	r4, r0
 1982              	.LVL313:
1092:./freertos/Source/portable/Common/mpu_wrappers.c **** 	vPortResetPrivilege( xRunningPrivileged );
 1983              		.loc 1 1092 0
 1984 0016 2846     		mov	r0, r5
 1985              	.LVL314:
 1986 0018 FFF7FEFF 		bl	vPortResetPrivilege
 1987              	.LVL315:
1093:./freertos/Source/portable/Common/mpu_wrappers.c **** 
1094:./freertos/Source/portable/Common/mpu_wrappers.c **** 	return xReturn;
1095:./freertos/Source/portable/Common/mpu_wrappers.c **** }
 1988              		.loc 1 1095 0
 1989 001c 2046     		mov	r0, r4
 1990 001e 70BD     		pop	{r4, r5, r6, pc}
 1991              		.cfi_endproc
 1992              	.LFE160:
 1994              		.section	.text.MPU_xEventGroupSync,"ax",%progbits
 1995              		.align	2
 1996              		.global	MPU_xEventGroupSync
 1997              		.thumb
 1998              		.thumb_func
 2000              	MPU_xEventGroupSync:
 2001              	.LFB161:
1096:./freertos/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
1097:./freertos/Source/portable/Common/mpu_wrappers.c **** 
1098:./freertos/Source/portable/Common/mpu_wrappers.c **** EventBits_t MPU_xEventGroupSync( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToSet, con
1099:./freertos/Source/portable/Common/mpu_wrappers.c **** {
 2002              		.loc 1 1099 0
 2003              		.cfi_startproc
 2004              		@ args = 0, pretend = 0, frame = 0
 2005              		@ frame_needed = 0, uses_anonymous_args = 0
 2006              	.LVL316:
 2007 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2008              	.LCFI49:
 2009              		.cfi_def_cfa_offset 24
 2010              		.cfi_offset 4, -24
 2011              		.cfi_offset 5, -20
 2012              		.cfi_offset 6, -16
 2013              		.cfi_offset 7, -12
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s 			page 54


 2014              		.cfi_offset 8, -8
 2015              		.cfi_offset 14, -4
 2016 0004 0446     		mov	r4, r0
 2017 0006 0E46     		mov	r6, r1
 2018 0008 1746     		mov	r7, r2
 2019 000a 9846     		mov	r8, r3
1100:./freertos/Source/portable/Common/mpu_wrappers.c **** EventBits_t xReturn;
1101:./freertos/Source/portable/Common/mpu_wrappers.c **** BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 2020              		.loc 1 1101 0
 2021 000c FFF7FEFF 		bl	xPortRaisePrivilege
 2022              	.LVL317:
 2023 0010 0546     		mov	r5, r0
 2024              	.LVL318:
1102:./freertos/Source/portable/Common/mpu_wrappers.c **** 
1103:./freertos/Source/portable/Common/mpu_wrappers.c **** 	xReturn = xEventGroupSync( xEventGroup, uxBitsToSet, uxBitsToWaitFor, xTicksToWait );
 2025              		.loc 1 1103 0
 2026 0012 4346     		mov	r3, r8
 2027 0014 3A46     		mov	r2, r7
 2028 0016 3146     		mov	r1, r6
 2029 0018 2046     		mov	r0, r4
 2030              	.LVL319:
 2031 001a FFF7FEFF 		bl	xEventGroupSync
 2032              	.LVL320:
 2033 001e 0446     		mov	r4, r0
 2034              	.LVL321:
1104:./freertos/Source/portable/Common/mpu_wrappers.c **** 	vPortResetPrivilege( xRunningPrivileged );
 2035              		.loc 1 1104 0
 2036 0020 2846     		mov	r0, r5
 2037              	.LVL322:
 2038 0022 FFF7FEFF 		bl	vPortResetPrivilege
 2039              	.LVL323:
1105:./freertos/Source/portable/Common/mpu_wrappers.c **** 
1106:./freertos/Source/portable/Common/mpu_wrappers.c **** 	return xReturn;
1107:./freertos/Source/portable/Common/mpu_wrappers.c **** }
 2040              		.loc 1 1107 0
 2041 0026 2046     		mov	r0, r4
 2042 0028 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2043              		.cfi_endproc
 2044              	.LFE161:
 2046              		.section	.text.MPU_vEventGroupDelete,"ax",%progbits
 2047              		.align	2
 2048              		.global	MPU_vEventGroupDelete
 2049              		.thumb
 2050              		.thumb_func
 2052              	MPU_vEventGroupDelete:
 2053              	.LFB162:
1108:./freertos/Source/portable/Common/mpu_wrappers.c **** /*-----------------------------------------------------------*/
1109:./freertos/Source/portable/Common/mpu_wrappers.c **** 
1110:./freertos/Source/portable/Common/mpu_wrappers.c **** void MPU_vEventGroupDelete( EventGroupHandle_t xEventGroup )
1111:./freertos/Source/portable/Common/mpu_wrappers.c **** {
 2054              		.loc 1 1111 0
 2055              		.cfi_startproc
 2056              		@ args = 0, pretend = 0, frame = 0
 2057              		@ frame_needed = 0, uses_anonymous_args = 0
 2058              	.LVL324:
 2059 0000 38B5     		push	{r3, r4, r5, lr}
 2060              	.LCFI50:
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s 			page 55


 2061              		.cfi_def_cfa_offset 16
 2062              		.cfi_offset 3, -16
 2063              		.cfi_offset 4, -12
 2064              		.cfi_offset 5, -8
 2065              		.cfi_offset 14, -4
 2066 0002 0546     		mov	r5, r0
1112:./freertos/Source/portable/Common/mpu_wrappers.c **** BaseType_t xRunningPrivileged = xPortRaisePrivilege();
 2067              		.loc 1 1112 0
 2068 0004 FFF7FEFF 		bl	xPortRaisePrivilege
 2069              	.LVL325:
 2070 0008 0446     		mov	r4, r0
 2071              	.LVL326:
1113:./freertos/Source/portable/Common/mpu_wrappers.c **** 
1114:./freertos/Source/portable/Common/mpu_wrappers.c **** 	vEventGroupDelete( xEventGroup );
 2072              		.loc 1 1114 0
 2073 000a 2846     		mov	r0, r5
 2074              	.LVL327:
 2075 000c FFF7FEFF 		bl	vEventGroupDelete
 2076              	.LVL328:
1115:./freertos/Source/portable/Common/mpu_wrappers.c **** 	vPortResetPrivilege( xRunningPrivileged );
 2077              		.loc 1 1115 0
 2078 0010 2046     		mov	r0, r4
 2079 0012 FFF7FEFF 		bl	vPortResetPrivilege
 2080              	.LVL329:
 2081 0016 38BD     		pop	{r3, r4, r5, pc}
 2082              		.cfi_endproc
 2083              	.LFE162:
 2085              		.text
 2086              	.Letext0:
 2087              		.file 2 "d:\\gcc-arm-none-eabi-5_4-2016q3-20160926-win32\\lib\\gcc\\arm-none-eabi\\5.4.1\\include\
 2088              		.file 3 "d:\\gcc-arm-none-eabi-5_4-2016q3-20160926-win32\\arm-none-eabi\\include\\machine\\_defaul
 2089              		.file 4 "d:\\gcc-arm-none-eabi-5_4-2016q3-20160926-win32\\arm-none-eabi\\include\\sys\\_stdint.h"
 2090              		.file 5 "freertos/include/projdefs.h"
 2091              		.file 6 "freertos/Source/portable/GCC/ARM_CM4_MPU/portmacro.h"
 2092              		.file 7 "freertos/include/task.h"
 2093              		.file 8 "freertos/include/queue.h"
 2094              		.file 9 "freertos/include/event_groups.h"
 2095              		.file 10 "freertos/include/portable.h"
 2096              		.file 11 "cmsis/include/core_cm4.h"
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s 			page 56


DEFINED SYMBOLS
                            *ABS*:00000000 mpu_wrappers.c
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:22     .text.MPU_xTaskCreateRestricted:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:27     .text.MPU_xTaskCreateRestricted:00000000 MPU_xTaskCreateRestricted
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:69     .text.MPU_xTaskCreate:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:74     .text.MPU_xTaskCreate:00000000 MPU_xTaskCreate
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:132    .text.MPU_vTaskAllocateMPURegions:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:137    .text.MPU_vTaskAllocateMPURegions:00000000 MPU_vTaskAllocateMPURegions
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:173    .text.MPU_vTaskDelete:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:178    .text.MPU_vTaskDelete:00000000 MPU_vTaskDelete
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:212    .text.MPU_vTaskDelayUntil:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:217    .text.MPU_vTaskDelayUntil:00000000 MPU_vTaskDelayUntil
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:253    .text.MPU_vTaskDelay:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:258    .text.MPU_vTaskDelay:00000000 MPU_vTaskDelay
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:292    .text.MPU_uxTaskPriorityGet:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:297    .text.MPU_uxTaskPriorityGet:00000000 MPU_uxTaskPriorityGet
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:336    .text.MPU_vTaskPrioritySet:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:341    .text.MPU_vTaskPrioritySet:00000000 MPU_vTaskPrioritySet
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:377    .text.MPU_vTaskSuspend:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:382    .text.MPU_vTaskSuspend:00000000 MPU_vTaskSuspend
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:416    .text.MPU_vTaskResume:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:421    .text.MPU_vTaskResume:00000000 MPU_vTaskResume
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:455    .text.MPU_vTaskSuspendAll:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:460    .text.MPU_vTaskSuspendAll:00000000 MPU_vTaskSuspendAll
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:488    .text.MPU_xTaskResumeAll:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:493    .text.MPU_xTaskResumeAll:00000000 MPU_xTaskResumeAll
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:528    .text.MPU_xTaskGetTickCount:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:533    .text.MPU_xTaskGetTickCount:00000000 MPU_xTaskGetTickCount
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:568    .text.MPU_uxTaskGetNumberOfTasks:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:573    .text.MPU_uxTaskGetNumberOfTasks:00000000 MPU_uxTaskGetNumberOfTasks
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:608    .text.MPU_pcTaskGetName:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:613    .text.MPU_pcTaskGetName:00000000 MPU_pcTaskGetName
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:652    .text.MPU_xTaskGetSchedulerState:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:657    .text.MPU_xTaskGetSchedulerState:00000000 MPU_xTaskGetSchedulerState
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:692    .text.MPU_vTaskSetTimeOutState:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:697    .text.MPU_vTaskSetTimeOutState:00000000 MPU_vTaskSetTimeOutState
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:731    .text.MPU_xTaskCheckForTimeOut:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:736    .text.MPU_xTaskCheckForTimeOut:00000000 MPU_xTaskCheckForTimeOut
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:777    .text.MPU_xTaskGenericNotify:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:782    .text.MPU_xTaskGenericNotify:00000000 MPU_xTaskGenericNotify
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:829    .text.MPU_xTaskNotifyWait:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:834    .text.MPU_xTaskNotifyWait:00000000 MPU_xTaskNotifyWait
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:881    .text.MPU_ulTaskNotifyTake:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:886    .text.MPU_ulTaskNotifyTake:00000000 MPU_ulTaskNotifyTake
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:927    .text.MPU_xTaskNotifyStateClear:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:932    .text.MPU_xTaskNotifyStateClear:00000000 MPU_xTaskNotifyStateClear
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:971    .text.MPU_xQueueGenericCreate:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:976    .text.MPU_xQueueGenericCreate:00000000 MPU_xQueueGenericCreate
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:1021   .text.MPU_xQueueGenericReset:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:1026   .text.MPU_xQueueGenericReset:00000000 MPU_xQueueGenericReset
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:1067   .text.MPU_xQueueGenericSend:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:1072   .text.MPU_xQueueGenericSend:00000000 MPU_xQueueGenericSend
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:1119   .text.MPU_uxQueueMessagesWaiting:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:1124   .text.MPU_uxQueueMessagesWaiting:00000000 MPU_uxQueueMessagesWaiting
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:1163   .text.MPU_uxQueueSpacesAvailable:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:1168   .text.MPU_uxQueueSpacesAvailable:00000000 MPU_uxQueueSpacesAvailable
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:1207   .text.MPU_xQueueGenericReceive:00000000 $t
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s 			page 57


C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:1212   .text.MPU_xQueueGenericReceive:00000000 MPU_xQueueGenericReceive
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:1259   .text.MPU_xQueuePeekFromISR:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:1264   .text.MPU_xQueuePeekFromISR:00000000 MPU_xQueuePeekFromISR
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:1305   .text.MPU_xQueueGetMutexHolder:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:1310   .text.MPU_xQueueGetMutexHolder:00000000 MPU_xQueueGetMutexHolder
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:1349   .text.MPU_xQueueCreateMutex:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:1354   .text.MPU_xQueueCreateMutex:00000000 MPU_xQueueCreateMutex
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:1393   .text.MPU_xQueueTakeMutexRecursive:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:1398   .text.MPU_xQueueTakeMutexRecursive:00000000 MPU_xQueueTakeMutexRecursive
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:1439   .text.MPU_xQueueGiveMutexRecursive:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:1444   .text.MPU_xQueueGiveMutexRecursive:00000000 MPU_xQueueGiveMutexRecursive
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:1483   .text.MPU_vQueueAddToRegistry:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:1488   .text.MPU_vQueueAddToRegistry:00000000 MPU_vQueueAddToRegistry
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:1524   .text.MPU_vQueueUnregisterQueue:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:1529   .text.MPU_vQueueUnregisterQueue:00000000 MPU_vQueueUnregisterQueue
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:1563   .text.MPU_pcQueueGetName:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:1568   .text.MPU_pcQueueGetName:00000000 MPU_pcQueueGetName
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:1607   .text.MPU_vQueueDelete:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:1612   .text.MPU_vQueueDelete:00000000 MPU_vQueueDelete
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:1646   .text.MPU_pvPortMalloc:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:1651   .text.MPU_pvPortMalloc:00000000 MPU_pvPortMalloc
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:1690   .text.MPU_vPortFree:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:1695   .text.MPU_vPortFree:00000000 MPU_vPortFree
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:1729   .text.MPU_vPortInitialiseBlocks:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:1734   .text.MPU_vPortInitialiseBlocks:00000000 MPU_vPortInitialiseBlocks
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:1762   .text.MPU_xPortGetFreeHeapSize:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:1767   .text.MPU_xPortGetFreeHeapSize:00000000 MPU_xPortGetFreeHeapSize
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:1802   .text.MPU_xEventGroupCreate:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:1807   .text.MPU_xEventGroupCreate:00000000 MPU_xEventGroupCreate
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:1842   .text.MPU_xEventGroupWaitBits:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:1847   .text.MPU_xEventGroupWaitBits:00000000 MPU_xEventGroupWaitBits
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:1903   .text.MPU_xEventGroupClearBits:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:1908   .text.MPU_xEventGroupClearBits:00000000 MPU_xEventGroupClearBits
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:1949   .text.MPU_xEventGroupSetBits:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:1954   .text.MPU_xEventGroupSetBits:00000000 MPU_xEventGroupSetBits
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:1995   .text.MPU_xEventGroupSync:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:2000   .text.MPU_xEventGroupSync:00000000 MPU_xEventGroupSync
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:2047   .text.MPU_vEventGroupDelete:00000000 $t
C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s:2052   .text.MPU_vEventGroupDelete:00000000 MPU_vEventGroupDelete
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
xPortRaisePrivilege
xTaskCreateRestricted
vPortResetPrivilege
xTaskCreate
vTaskAllocateMPURegions
vTaskDelete
vTaskDelayUntil
vTaskDelay
uxTaskPriorityGet
vTaskPrioritySet
vTaskSuspend
vTaskResume
vTaskSuspendAll
xTaskResumeAll
xTaskGetTickCount
ARM GAS  C:\Users\strag\AppData\Local\Temp\ccXsQLrx.s 			page 58


uxTaskGetNumberOfTasks
pcTaskGetName
xTaskGetSchedulerState
vTaskSetTimeOutState
xTaskCheckForTimeOut
xTaskGenericNotify
xTaskNotifyWait
ulTaskNotifyTake
xTaskNotifyStateClear
xQueueGenericCreate
xQueueGenericReset
xQueueGenericSend
uxQueueMessagesWaiting
uxQueueSpacesAvailable
xQueueGenericReceive
xQueuePeekFromISR
xQueueGetMutexHolder
xQueueCreateMutex
xQueueTakeMutexRecursive
xQueueGiveMutexRecursive
vQueueAddToRegistry
vQueueUnregisterQueue
pcQueueGetName
vQueueDelete
pvPortMalloc
vPortFree
vPortInitialiseBlocks
xPortGetFreeHeapSize
xEventGroupCreate
xEventGroupWaitBits
xEventGroupClearBits
xEventGroupSetBits
xEventGroupSync
vEventGroupDelete
